// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/modules/vm/wasmapi/types/types.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockServer is a mock of Server interface.
type MockServer struct {
	ctrl     *gomock.Controller
	recorder *MockServerMockRecorder
}

// MockServerMockRecorder is the mock recorder for MockServer.
type MockServerMockRecorder struct {
	mock *MockServer
}

// NewMockServer creates a new mock instance.
func NewMockServer(ctrl *gomock.Controller) *MockServer {
	mock := &MockServer{ctrl: ctrl}
	mock.recorder = &MockServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServer) EXPECT() *MockServerMockRecorder {
	return m.recorder
}

// Call mocks base method.
func (m *MockServer) Call(ctx context.Context, data []byte) *http.Response {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Call", ctx, data)
	ret0, _ := ret[0].(*http.Response)
	return ret0
}

// Call indicates an expected call of Call.
func (mr *MockServerMockRecorder) Call(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Call", reflect.TypeOf((*MockServer)(nil).Call), ctx, data)
}
