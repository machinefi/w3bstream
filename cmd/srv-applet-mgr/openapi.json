{
  "openapi": "3.0.3",
  "info": {
    "title": "",
    "version": ""
  },
  "paths": {
    "/liveness": {
      "get": {
        "tags": [
          "github.com/machinefi/w3bstream/pkg/depends/conf/http"
        ],
        "operationId": "Liveness",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "propertyNames": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/srv-applet-mgr": {
      "get": {
        "tags": [
          "github.com/machinefi/w3bstream/pkg/depends/kit/httptransport/openapi"
        ],
        "operationId": "OpenAPI",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BytesBuffer"
                }
              }
            }
          },
          "499": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ContextCanceled][499000000][ContextCanceled]"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[UnknownError][500000000][UnknownError]"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/account": {
      "put": {
        "tags": [
          "apis/account"
        ],
        "operationId": "UpdatePasswordByAccountID",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAccountUpdatePasswordReq"
                  },
                  {
                    "x-go-field-name": "UpdatePasswordReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidNewPassword][401999008][Invalid New Password]!",
              "@StatusErr[InvalidOldPassword][401999007][Invalid Old Password]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!"
            ]
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DisabledAccount][403999002][Disabled Account]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AccountPasswordNotFound][404999018][Account Password Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/account/operatoraddr": {
      "get": {
        "tags": [
          "apis/account"
        ],
        "summary": "Deprecated use operator.ListOperator",
        "operationId": "GetOperatorAddr",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "accountOperatorName",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "account operator name",
              "x-go-field-name": "AccountOperatorName",
              "x-tag-name": "accountOperatorName,omitempty"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[OperatorNotFound][404999019][Operator Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/account_access_key": {
      "post": {
        "tags": [
          "apis/account_access_key"
        ],
        "summary": "CreateAccountAccessKey create account access key",
        "operationId": "CreateAccountAccessKey",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAccessKeyCreateReqBase"
                  },
                  {
                    "x-go-field-name": "CreateAccountAccessKeyReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAccessKeyCreateRsp"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAccessKeyIdentityType][400999013][Invalid Access Key Identity Type]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccessKeyNameConflict][409999020][Access Key Name Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/account_access_key/datalist": {
      "get": {
        "tags": [
          "apis/account_access_key"
        ],
        "summary": "ListAccountAccessKey get api access key list under current account",
        "operationId": "ListAccountAccessKey",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "expiredAtBegin",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
                },
                {
                  "x-go-field-name": "ExpiredAtBegin",
                  "x-tag-name": "expiredAtBegin,omitempty"
                }
              ]
            }
          },
          {
            "name": "expiredAtEnd",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
                },
                {
                  "x-go-field-name": "ExpiredAtEnd",
                  "x-tag-name": "expiredAtEnd,omitempty"
                }
              ]
            }
          },
          {
            "name": "identityID",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFIDs"
                },
                {
                  "x-go-field-name": "IdentityIDs",
                  "x-tag-name": "identityID,omitempty"
                }
              ]
            }
          },
          {
            "name": "identityType",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsAccessKeyIdentityType"
              },
              "x-go-field-name": "IdentityTypes",
              "x-tag-name": "identityType,omitempty"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Names",
              "x-tag-name": "name,omitempty"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": 0,
              "default": "0",
              "x-go-field-name": "Offset",
              "x-tag-name": "offset,omitempty",
              "x-tag-validate": "@int64[0,]"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -1,
              "default": "10",
              "x-go-field-name": "Size",
              "x-tag-name": "size,omitempty",
              "x-tag-validate": "@int64[-1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAccessKeyListRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/account_access_key/{name}": {
      "delete": {
        "tags": [
          "apis/account_access_key"
        ],
        "summary": "DeleteAccountAccessKeyByName delete access key by name under current account",
        "operationId": "DeleteAccountAccessKeyByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-field-name": "Name",
              "x-tag-name": "name"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccessKeyNotFound][404999022][Account Key Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/applet/data/{appletID}": {
      "delete": {
        "tags": [
          "apis/applet"
        ],
        "summary": "RemoveApplet remove applet by applet id",
        "operationId": "RemoveApplet",
        "parameters": [
          {
            "name": "appletID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "AppletID",
                  "x-tag-name": "appletID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[BatchRemoveWasmLogFailed][500999012][Batch Remove WasmLog Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[ConfigUninitFailed][500999006][Config Uninit Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "get": {
        "tags": [
          "apis/applet"
        ],
        "summary": "GetApplet get applet by applet id",
        "operationId": "GetApplet",
        "parameters": [
          {
            "name": "appletID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "AppletID",
                  "x-tag-name": "appletID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsApplet"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/applet/x/{projectName}": {
      "delete": {
        "tags": [
          "apis/applet"
        ],
        "summary": "BatchRemoveApplet remove applets with condition under project permission",
        "operationId": "BatchRemoveApplet",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "appletID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "AppletIDs",
              "x-tag-name": "appletID,omitempty"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "lName",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "LNameLike",
              "x-tag-name": "lName,omitempty"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "NameLike",
              "x-tag-name": "name,omitempty"
            }
          },
          {
            "name": "names",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Names",
              "x-tag-name": "names,omitempty"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[BatchRemoveAppletFailed][500999009][Batch Remove Applet Failed]!",
              "@StatusErr[BatchRemoveWasmLogFailed][500999012][Batch Remove WasmLog Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[ConfigUninitFailed][500999006][Config Uninit Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "post": {
        "tags": [
          "apis/applet"
        ],
        "operationId": "CreateApplet",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAppletCreateReq"
                  },
                  {
                    "x-go-field-name": "CreateReq",
                    "x-tag-mime": "multipart"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAppletCreateRsp"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!",
              "@StatusErr[InvalidVMState][400999012][Invalid VM State]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAppletContext][401999016][Invalid Applet]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[UploadFileDiskLimit][403999006][Upload File Disk Limit]!",
              "@StatusErr[UploadFileMd5Unmatched][403999005][Upload File Md5 Unmatched]!",
              "@StatusErr[UploadFileSizeLimit][403999004][Upload File Size Limit]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[ProjectOperatorNotFound][404999021][Project Operator relationship Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AppletNameConflict][409999009][Applet Name Conflict]!",
              "@StatusErr[ConfigConflict][409999006][Config Conflict]!",
              "@StatusErr[MultiInstanceDeployed][409999008][Multi Instance Deployed]!",
              "@StatusErr[ResourceConflict][409999003][Resource Conflict]!",
              "@StatusErr[StrategyConflict][409999005][Strategy Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigInitFailed][500999005][Config Init Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[ConfigUninitFailed][500999006][Config Uninit Failed]!",
              "@StatusErr[CreateInstanceFailed][500999008][Create Instance Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[UploadFileFailed][500999003][Upload File Failed]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/applet/x/{projectName}/datalist": {
      "get": {
        "tags": [
          "apis/applet"
        ],
        "summary": "ListApplet list applets with condition under project permission",
        "operationId": "ListApplet",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "appletID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "AppletIDs",
              "x-tag-name": "appletID,omitempty"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "lName",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "LNameLike",
              "x-tag-name": "lName,omitempty"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "NameLike",
              "x-tag-name": "name,omitempty"
            }
          },
          {
            "name": "names",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Names",
              "x-tag-name": "names,omitempty"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": 0,
              "default": "0",
              "x-go-field-name": "Offset",
              "x-tag-name": "offset,omitempty",
              "x-tag-validate": "@int64[0,]"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -1,
              "default": "10",
              "x-go-field-name": "Size",
              "x-tag-name": "size,omitempty",
              "x-tag-validate": "@int64[-1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAppletListRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/applet/{appletID}": {
      "put": {
        "tags": [
          "apis/applet"
        ],
        "operationId": "UpdateApplet",
        "parameters": [
          {
            "name": "appletID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "AppletID",
                  "x-tag-name": "appletID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAppletUpdateReq"
                  },
                  {
                    "x-go-field-name": "UpdateReq",
                    "x-tag-mime": "multipart"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAppletCreateRsp"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!",
              "@StatusErr[InvalidVMState][400999012][Invalid VM State]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAppletContext][401999016][Invalid Applet]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[UploadFileDiskLimit][403999006][Upload File Disk Limit]!",
              "@StatusErr[UploadFileMd5Unmatched][403999005][Upload File Md5 Unmatched]!",
              "@StatusErr[UploadFileSizeLimit][403999004][Upload File Size Limit]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[ProjectOperatorNotFound][404999021][Project Operator relationship Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AppletNameConflict][409999009][Applet Name Conflict]!",
              "@StatusErr[ConfigConflict][409999006][Config Conflict]!",
              "@StatusErr[MultiInstanceDeployed][409999008][Multi Instance Deployed]!",
              "@StatusErr[ResourceConflict][409999003][Resource Conflict]!",
              "@StatusErr[StrategyConflict][409999005][Strategy Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigInitFailed][500999005][Config Init Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[ConfigUninitFailed][500999006][Config Uninit Failed]!",
              "@StatusErr[CreateInstanceFailed][500999008][Create Instance Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[UploadFileFailed][500999003][Upload File Failed]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/configuration/eth_client": {
      "get": {
        "tags": [
          "apis/configuration"
        ],
        "operationId": "EthClient",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EthClientRsp"
                }
              }
            }
          }
        }
      }
    },
    "/srv-applet-mgr/v0/cronjob/data/{cronJobID}": {
      "delete": {
        "tags": [
          "apis/cronjob"
        ],
        "operationId": "RemoveCronJob",
        "parameters": [
          {
            "name": "cronJobID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "CronJobID",
                  "x-tag-name": "cronJobID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[CronJobNotFound][404999011][Cron Job Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/cronjob/{projectID}": {
      "get": {
        "tags": [
          "apis/cronjob"
        ],
        "operationId": "ListCronJob",
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "ProjectID",
                  "x-tag-name": "projectID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "cronJobID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "CronJobIDs",
              "x-tag-name": "cronJobID,omitempty"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "EventTypes",
              "x-tag-name": "eventType,omitempty"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": 0,
              "default": "0",
              "x-go-field-name": "Offset",
              "x-tag-name": "offset,omitempty",
              "x-tag-validate": "@int64[0,]"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -1,
              "default": "10",
              "x-go-field-name": "Size",
              "x-tag-name": "size,omitempty",
              "x-tag-validate": "@int64[-1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesCronjobListRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "post": {
        "tags": [
          "apis/cronjob"
        ],
        "operationId": "CreateCronJob",
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "ProjectID",
                  "x-tag-name": "projectID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesCronjobCreateReq"
                  },
                  {
                    "x-go-field-name": "CreateReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsCronJob"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidCronExpressions][400999005][Invalid Cron Expressions]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CronJobConflict][409999010][Cron Job Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/deploy/applet/{appletID}": {
      "get": {
        "tags": [
          "apis/deploy"
        ],
        "operationId": "GetInstanceByAppletID",
        "parameters": [
          {
            "name": "appletID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "AppletID",
                  "x-tag-name": "appletID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsInstance"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "post": {
        "tags": [
          "apis/deploy"
        ],
        "operationId": "CreateAndStartInstance",
        "parameters": [
          {
            "name": "appletID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "AppletID",
                  "x-tag-name": "appletID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesDeployCreateReq"
                  },
                  {
                    "x-go-field-name": "CreateReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsInstance"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!",
              "@StatusErr[InvalidVMState][400999012][Invalid VM State]!",
              "@StatusErr[UnknownDeployCommand][400999004][Unknown Deploy Command]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAppletContext][401999016][Invalid Applet]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[ProjectOperatorNotFound][404999021][Project Operator relationship Not Found]!",
              "@StatusErr[ResourceNotFound][404999004][Resource Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigConflict][409999006][Config Conflict]!",
              "@StatusErr[MultiInstanceDeployed][409999008][Multi Instance Deployed]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigInitFailed][500999005][Config Init Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[ConfigUninitFailed][500999006][Config Uninit Failed]!",
              "@StatusErr[CreateInstanceFailed][500999008][Create Instance Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[FetchResourceFailed][500999004][Fetch Resource Failed]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/deploy/data/{instanceID}": {
      "delete": {
        "tags": [
          "apis/deploy"
        ],
        "summary": "RemoveInstance remove instance by instance id",
        "operationId": "RemoveInstance",
        "parameters": [
          {
            "name": "instanceID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "InstanceID",
                  "x-tag-name": "instanceID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[ResourceNotFound][404999004][Resource Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[BatchRemoveWasmLogFailed][500999012][Batch Remove WasmLog Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[ConfigUninitFailed][500999006][Config Uninit Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/deploy/instance/{instanceID}": {
      "get": {
        "tags": [
          "apis/deploy"
        ],
        "operationId": "GetInstanceByInstanceID",
        "parameters": [
          {
            "name": "instanceID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "InstanceID",
                  "x-tag-name": "instanceID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsInstance"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[ResourceNotFound][404999004][Resource Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/deploy/x/{projectName}": {
      "delete": {
        "tags": [
          "apis/deploy"
        ],
        "summary": "BatchRemoveInstance remove instances by condition",
        "operationId": "BatchRemoveInstance",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "appletID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "AppletIDs",
              "x-tag-name": "appletID,omitempty"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "instanceID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "InstanceIDs",
              "x-tag-name": "instanceID,omitempty"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsInstanceState"
              },
              "x-go-field-name": "States",
              "x-tag-name": "state,omitempty"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[BatchRemoveWasmLogFailed][500999012][Batch Remove WasmLog Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[ConfigUninitFailed][500999006][Config Uninit Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/deploy/{instanceID}/{cmd}": {
      "put": {
        "tags": [
          "apis/deploy"
        ],
        "operationId": "ControlInstance",
        "parameters": [
          {
            "name": "cmd",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsDeployCmd"
                },
                {
                  "x-go-field-name": "Cmd",
                  "x-tag-name": "cmd"
                }
              ]
            }
          },
          {
            "name": "instanceID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "InstanceID",
                  "x-tag-name": "instanceID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[UnknownDeployCommand][400999004][Unknown Deploy Command]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[ResourceNotFound][404999004][Resource Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[MultiInstanceDeployed][409999008][Multi Instance Deployed]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/event/{channel}": {
      "post": {
        "tags": [
          "apis/event"
        ],
        "operationId": "HandleEvent",
        "parameters": [
          {
            "name": "channel",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Channel message channel named (intact project name)",
              "x-go-field-name": "Channel",
              "x-tag-name": "channel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "eventID",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "EventID unique id for tracing event under channel",
              "x-go-field-name": "EventID",
              "x-tag-name": "eventID,omitempty"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "EventType used for filter strategies created in w3b before",
              "x-go-field-name": "EventType",
              "x-tag-name": "eventType,omitempty"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "description": "Timestamp event time when publisher do send",
              "x-go-field-name": "Timestamp",
              "x-tag-name": "timestamp,omitempty"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/octet-stream": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BytesBuffer"
                  },
                  {
                    "description": "Payload event payload (binary only)",
                    "x-go-field-name": "Payload",
                    "x-tag-mime": "stream"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesEventEventRsp"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[BadRequest][400999001][BadRequest]!",
              "@StatusErr[DeprecatedProject][400999003][Deprecated Project]!",
              "@StatusErr[InvalidAccessKeyIdentityType][400999013][Invalid Access Key Identity Type]!",
              "@StatusErr[InvalidChainHeightIDs][400999011][Invalid Chain Height IDs]!",
              "@StatusErr[InvalidChainTxIDs][400999010][Invalid Chain Tx IDs]!",
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!",
              "@StatusErr[InvalidContractLogIDs][400999009][Invalid Contract Log IDs]!",
              "@StatusErr[InvalidCronExpressions][400999005][Invalid Cron Expressions]!",
              "@StatusErr[InvalidDeleteCondition][400999007][Invalid Delete Condition]!",
              "@StatusErr[InvalidPrivateKey][400999006][Invalid Private Key]!",
              "@StatusErr[InvalidVMState][400999012][Invalid VM State]!",
              "@StatusErr[UnknownDeployCommand][400999004][Unknown Deploy Command]!",
              "@StatusErr[UnknownMonitorCommand][400999008][Unknown Deploy Command]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccessKeyExpired][401999019][Account Access Key Expired]!",
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAccessKey][401999018][Invalid Account Access Key]!",
              "@StatusErr[InvalidAppletContext][401999016][Invalid Applet]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthPublisherID][401999012][Invalid Auth Publisher ID]!",
              "@StatusErr[InvalidAuthPublisherID][401999012][Invalid Auth Publisher ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidEthLoginMessage][401999011][Invalid Siwe Message]!",
              "@StatusErr[InvalidEthLoginSignature][401999010][Invalid Siwe Signature]!",
              "@StatusErr[InvalidEventChannel][401999014][Invalid Event Channel]!",
              "@StatusErr[InvalidEventToken][401999015][Invalid Event Token]!",
              "@StatusErr[InvalidNewPassword][401999008][Invalid New Password]!",
              "@StatusErr[InvalidOldPassword][401999007][Invalid Old Password]!",
              "@StatusErr[InvalidPassword][401999009][Invalid Password]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoAdminPermission][401999006][No Admin Permission]!",
              "@StatusErr[NoOperatorPermission][401999005][No Operator Permission]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!",
              "@StatusErr[NoResourcePermission][401999017][No Resource Permission]!",
              "@StatusErr[Unauthorized][401999001][unauthorized]"
            ]
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DisabledAccount][403999002][Disabled Account]!",
              "@StatusErr[Forbidden][403999001][forbidden]",
              "@StatusErr[OccupiedOperator][403999008][Occupied Operator]!",
              "@StatusErr[TopicAlreadySubscribed][403999007][Topic Already Subscribed]!",
              "@StatusErr[UnsupportedFSOperator][403999009][Unsupported FileSystem Operator]!",
              "@StatusErr[UploadFileDiskLimit][403999006][Upload File Disk Limit]!",
              "@StatusErr[UploadFileMd5Unmatched][403999005][Upload File Md5 Unmatched]!",
              "@StatusErr[UploadFileSizeLimit][403999004][Upload File Size Limit]!",
              "@StatusErr[WhiteListForbidden][403999003][White List Forbidden]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccessKeyNotFound][404999022][Account Key Not Found]!",
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AccountPasswordNotFound][404999018][Account Password Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[BlockchainNotFound][404999013][Blockchain Not Found]!",
              "@StatusErr[ChainHeightNotFound][404999016][Chain Height Not Found]!",
              "@StatusErr[ChainTxNotFound][404999015][Chain Tx Not Found]!",
              "@StatusErr[ConfigNotFound][404999003][Config Not Found]!",
              "@StatusErr[ContractLogNotFound][404999014][Contract Log Not Found]!",
              "@StatusErr[CronJobNotFound][404999011][Cron Job Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[InstanceNotRunning][404999012][Instance Not Running]!",
              "@StatusErr[NotFound][404999001][NotFound]!",
              "@StatusErr[OperatorNotFound][404999019][Operator Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[ProjectOperatorNotFound][404999021][Project Operator relationship Not Found]!",
              "@StatusErr[PublisherNotFound][404999008][Publisher Not Found]!",
              "@StatusErr[PublisherNotFound][404999008][Publisher Not Found]!",
              "@StatusErr[ResourceNotFound][404999004][Resource Not Found]!",
              "@StatusErr[ResourcePermNotFound][404999010][Resource Perm Not Found]!",
              "@StatusErr[StrategyNotFound][404999007][Strategy Not Found]!",
              "@StatusErr[TrafficLimitNotFound][404999020][Traffic Limit Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccessKeyNameConflict][409999020][Access Key Name Conflict]!",
              "@StatusErr[AccountConflict][409999015][Account Conflict]!",
              "@StatusErr[AccountIdentityConflict][409999014][Account Identity Conflict]!",
              "@StatusErr[AccountPasswordConflict][409999016][Account Password Conflict]!",
              "@StatusErr[AppletNameConflict][409999009][Applet Name Conflict]!",
              "@StatusErr[ChainHeightConflict][409999013][Chain Height Conflict]!",
              "@StatusErr[ChainTxConflict][409999012][Chain Tx Conflict]!",
              "@StatusErr[ConfigConflict][409999006][Config Conflict]!",
              "@StatusErr[Conflict][409999001][Conflict conflict error]!",
              "@StatusErr[ContractLogConflict][409999011][Contract Log Conflict]!",
              "@StatusErr[CronJobConflict][409999010][Cron Job Conflict]!",
              "@StatusErr[MultiInstanceDeployed][409999008][Multi Instance Deployed]!",
              "@StatusErr[OperatorConflict][409999017][Operator Conflict]!",
              "@StatusErr[ProjectNameConflict][409999002][Project Name Conflict]!",
              "@StatusErr[ProjectOperatorConflict][409999019][Project Operator relationship Conflict]!",
              "@StatusErr[PublisherConflict][409999007][Publisher Conflict]!",
              "@StatusErr[ResourceConflict][409999003][Resource Conflict]!",
              "@StatusErr[ResourceOwnerConflict][409999004][Resource Owner Conflict]!",
              "@StatusErr[StrategyConflict][409999005][Strategy Conflict]!",
              "@StatusErr[TrafficLimitConflict][409999018][Traffic Limit Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[BatchRemoveAppletFailed][500999009][Batch Remove Applet Failed]!",
              "@StatusErr[BatchRemoveWasmLogFailed][500999012][Batch Remove WasmLog Failed]!",
              "@StatusErr[ConfigInitFailed][500999005][Config Init Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[ConfigUninitFailed][500999006][Config Uninit Failed]!",
              "@StatusErr[CreateInstanceFailed][500999008][Create Instance Failed]!",
              "@StatusErr[CreateTrafficSchedulerFailed][500999015][Create Traffic Scheduler Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[FetchResourceFailed][500999004][Fetch Resource Failed]!",
              "@StatusErr[GenTokenFailed][500999013][Gen Token Failed]!",
              "@StatusErr[InternalServerError][500999001][internal error]",
              "@StatusErr[MqttConnectFailed][500999011][MQTT Connect Failed]!",
              "@StatusErr[MqttSubscribeFailed][500999010][MQTT Subscribe Failed]!",
              "@StatusErr[TrafficLimitExceededFailed][500999014][Traffic Limit Exceeded Failed]!",
              "@StatusErr[UpdateTrafficSchedulerFailed][500999016][Update Traffic Scheduler Failed]!",
              "@StatusErr[UploadFileFailed][500999003][Upload File Failed]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/event2/{channel}": {
      "post": {
        "tags": [
          "apis/event"
        ],
        "operationId": "HandleDataPush",
        "parameters": [
          {
            "name": "channel",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-field-name": "Channel",
              "x-tag-name": "channel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DataPushReq"
                  },
                  {
                    "x-go-field-name": "DataPushReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPushRsps"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[BadRequest][400999001][BadRequest]!",
              "@StatusErr[DeprecatedProject][400999003][Deprecated Project]!",
              "@StatusErr[InvalidAccessKeyIdentityType][400999013][Invalid Access Key Identity Type]!",
              "@StatusErr[InvalidChainHeightIDs][400999011][Invalid Chain Height IDs]!",
              "@StatusErr[InvalidChainTxIDs][400999010][Invalid Chain Tx IDs]!",
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!",
              "@StatusErr[InvalidContractLogIDs][400999009][Invalid Contract Log IDs]!",
              "@StatusErr[InvalidCronExpressions][400999005][Invalid Cron Expressions]!",
              "@StatusErr[InvalidDeleteCondition][400999007][Invalid Delete Condition]!",
              "@StatusErr[InvalidPrivateKey][400999006][Invalid Private Key]!",
              "@StatusErr[InvalidVMState][400999012][Invalid VM State]!",
              "@StatusErr[UnknownDeployCommand][400999004][Unknown Deploy Command]!",
              "@StatusErr[UnknownMonitorCommand][400999008][Unknown Deploy Command]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccessKeyExpired][401999019][Account Access Key Expired]!",
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAccessKey][401999018][Invalid Account Access Key]!",
              "@StatusErr[InvalidAppletContext][401999016][Invalid Applet]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthPublisherID][401999012][Invalid Auth Publisher ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidEthLoginMessage][401999011][Invalid Siwe Message]!",
              "@StatusErr[InvalidEthLoginSignature][401999010][Invalid Siwe Signature]!",
              "@StatusErr[InvalidEventChannel][401999014][Invalid Event Channel]!",
              "@StatusErr[InvalidEventToken][401999015][Invalid Event Token]!",
              "@StatusErr[InvalidNewPassword][401999008][Invalid New Password]!",
              "@StatusErr[InvalidOldPassword][401999007][Invalid Old Password]!",
              "@StatusErr[InvalidPassword][401999009][Invalid Password]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoAdminPermission][401999006][No Admin Permission]!",
              "@StatusErr[NoOperatorPermission][401999005][No Operator Permission]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!",
              "@StatusErr[NoResourcePermission][401999017][No Resource Permission]!",
              "@StatusErr[Unauthorized][401999001][unauthorized]"
            ]
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DisabledAccount][403999002][Disabled Account]!",
              "@StatusErr[Forbidden][403999001][forbidden]",
              "@StatusErr[OccupiedOperator][403999008][Occupied Operator]!",
              "@StatusErr[TopicAlreadySubscribed][403999007][Topic Already Subscribed]!",
              "@StatusErr[UnsupportedFSOperator][403999009][Unsupported FileSystem Operator]!",
              "@StatusErr[UploadFileDiskLimit][403999006][Upload File Disk Limit]!",
              "@StatusErr[UploadFileMd5Unmatched][403999005][Upload File Md5 Unmatched]!",
              "@StatusErr[UploadFileSizeLimit][403999004][Upload File Size Limit]!",
              "@StatusErr[WhiteListForbidden][403999003][White List Forbidden]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccessKeyNotFound][404999022][Account Key Not Found]!",
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AccountPasswordNotFound][404999018][Account Password Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[BlockchainNotFound][404999013][Blockchain Not Found]!",
              "@StatusErr[ChainHeightNotFound][404999016][Chain Height Not Found]!",
              "@StatusErr[ChainTxNotFound][404999015][Chain Tx Not Found]!",
              "@StatusErr[ConfigNotFound][404999003][Config Not Found]!",
              "@StatusErr[ContractLogNotFound][404999014][Contract Log Not Found]!",
              "@StatusErr[CronJobNotFound][404999011][Cron Job Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[InstanceNotRunning][404999012][Instance Not Running]!",
              "@StatusErr[NotFound][404999001][NotFound]!",
              "@StatusErr[OperatorNotFound][404999019][Operator Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[ProjectOperatorNotFound][404999021][Project Operator relationship Not Found]!",
              "@StatusErr[PublisherNotFound][404999008][Publisher Not Found]!",
              "@StatusErr[ResourceNotFound][404999004][Resource Not Found]!",
              "@StatusErr[ResourcePermNotFound][404999010][Resource Perm Not Found]!",
              "@StatusErr[StrategyNotFound][404999007][Strategy Not Found]!",
              "@StatusErr[TrafficLimitNotFound][404999020][Traffic Limit Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccessKeyNameConflict][409999020][Access Key Name Conflict]!",
              "@StatusErr[AccountConflict][409999015][Account Conflict]!",
              "@StatusErr[AccountIdentityConflict][409999014][Account Identity Conflict]!",
              "@StatusErr[AccountPasswordConflict][409999016][Account Password Conflict]!",
              "@StatusErr[AppletNameConflict][409999009][Applet Name Conflict]!",
              "@StatusErr[ChainHeightConflict][409999013][Chain Height Conflict]!",
              "@StatusErr[ChainTxConflict][409999012][Chain Tx Conflict]!",
              "@StatusErr[ConfigConflict][409999006][Config Conflict]!",
              "@StatusErr[Conflict][409999001][Conflict conflict error]!",
              "@StatusErr[ContractLogConflict][409999011][Contract Log Conflict]!",
              "@StatusErr[CronJobConflict][409999010][Cron Job Conflict]!",
              "@StatusErr[MultiInstanceDeployed][409999008][Multi Instance Deployed]!",
              "@StatusErr[OperatorConflict][409999017][Operator Conflict]!",
              "@StatusErr[ProjectNameConflict][409999002][Project Name Conflict]!",
              "@StatusErr[ProjectOperatorConflict][409999019][Project Operator relationship Conflict]!",
              "@StatusErr[PublisherConflict][409999007][Publisher Conflict]!",
              "@StatusErr[ResourceConflict][409999003][Resource Conflict]!",
              "@StatusErr[ResourceOwnerConflict][409999004][Resource Owner Conflict]!",
              "@StatusErr[StrategyConflict][409999005][Strategy Conflict]!",
              "@StatusErr[TrafficLimitConflict][409999018][Traffic Limit Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[BatchRemoveAppletFailed][500999009][Batch Remove Applet Failed]!",
              "@StatusErr[BatchRemoveWasmLogFailed][500999012][Batch Remove WasmLog Failed]!",
              "@StatusErr[ConfigInitFailed][500999005][Config Init Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[ConfigUninitFailed][500999006][Config Uninit Failed]!",
              "@StatusErr[CreateInstanceFailed][500999008][Create Instance Failed]!",
              "@StatusErr[CreateTrafficSchedulerFailed][500999015][Create Traffic Scheduler Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[FetchResourceFailed][500999004][Fetch Resource Failed]!",
              "@StatusErr[GenTokenFailed][500999013][Gen Token Failed]!",
              "@StatusErr[InternalServerError][500999001][internal error]",
              "@StatusErr[MqttConnectFailed][500999011][MQTT Connect Failed]!",
              "@StatusErr[MqttSubscribeFailed][500999010][MQTT Subscribe Failed]!",
              "@StatusErr[TrafficLimitExceededFailed][500999014][Traffic Limit Exceeded Failed]!",
              "@StatusErr[UpdateTrafficSchedulerFailed][500999016][Update Traffic Scheduler Failed]!",
              "@StatusErr[UploadFileFailed][500999003][Upload File Failed]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/login": {
      "put": {
        "tags": [
          "apis/login"
        ],
        "operationId": "LoginByUsername",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAccountLoginByUsernameReq"
                  },
                  {
                    "x-go-field-name": "LoginByUsernameReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAccountLoginRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidPassword][401999009][Invalid Password]!"
            ]
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DisabledAccount][403999002][Disabled Account]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AccountPasswordNotFound][404999018][Account Password Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[GenTokenFailed][500999013][Gen Token Failed]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/login/wallet": {
      "put": {
        "tags": [
          "apis/login"
        ],
        "operationId": "LoginByEthAddress",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAccountLoginByEthAddressReq"
                  },
                  {
                    "x-go-field-name": "LoginByEthAddressReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAccountLoginRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidEthLoginMessage][401999011][Invalid Siwe Message]!",
              "@StatusErr[InvalidEthLoginSignature][401999010][Invalid Siwe Signature]!"
            ]
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DisabledAccount][403999002][Disabled Account]!",
              "@StatusErr[WhiteListForbidden][403999003][White List Forbidden]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityConflict][409999014][Account Identity Conflict]!",
              "@StatusErr[OperatorConflict][409999017][Operator Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[GenTokenFailed][500999013][Gen Token Failed]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/monitor/x/{projectName}/chain_height": {
      "post": {
        "tags": [
          "apis/monitor"
        ],
        "operationId": "CreateChainHeight",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesBlockchainCreateChainHeightReq"
                  },
                  {
                    "x-go-field-name": "CreateChainHeightReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsChainHeight"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[BlockchainNotFound][404999013][Blockchain Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ChainHeightConflict][409999013][Chain Height Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/monitor/x/{projectName}/chain_height/{chainHeightID}": {
      "delete": {
        "tags": [
          "apis/monitor"
        ],
        "operationId": "RemoveChainHeight",
        "parameters": [
          {
            "name": "chainHeightID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "ChainHeightID",
                  "x-tag-name": "chainHeightID"
                }
              ]
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ChainHeightNotFound][404999016][Chain Height Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/monitor/x/{projectName}/chain_height/{cmd}": {
      "put": {
        "tags": [
          "apis/monitor"
        ],
        "operationId": "ControlChainHeight",
        "parameters": [
          {
            "name": "cmd",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsMonitorCmd"
                },
                {
                  "x-go-field-name": "Cmd",
                  "x-tag-name": "cmd"
                }
              ]
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesBlockchainBatchUpdateMonitorReq"
                  },
                  {
                    "x-go-field-name": "BatchUpdateMonitorReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidChainHeightIDs][400999011][Invalid Chain Height IDs]!",
              "@StatusErr[UnknownMonitorCommand][400999008][Unknown Deploy Command]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/monitor/x/{projectName}/chain_tx": {
      "post": {
        "tags": [
          "apis/monitor"
        ],
        "operationId": "CreateChainTx",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesBlockchainCreateChainTxReq"
                  },
                  {
                    "x-go-field-name": "CreateChainTxReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsChainTx"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[BlockchainNotFound][404999013][Blockchain Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ChainTxConflict][409999012][Chain Tx Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/monitor/x/{projectName}/chain_tx/{chainTxID}": {
      "delete": {
        "tags": [
          "apis/monitor"
        ],
        "operationId": "RemoveChainTx",
        "parameters": [
          {
            "name": "chainTxID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "ChainTxID",
                  "x-tag-name": "chainTxID"
                }
              ]
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ChainTxNotFound][404999015][Chain Tx Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/monitor/x/{projectName}/chain_tx/{cmd}": {
      "put": {
        "tags": [
          "apis/monitor"
        ],
        "operationId": "ControlChainTx",
        "parameters": [
          {
            "name": "cmd",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsMonitorCmd"
                },
                {
                  "x-go-field-name": "Cmd",
                  "x-tag-name": "cmd"
                }
              ]
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesBlockchainBatchUpdateMonitorReq"
                  },
                  {
                    "x-go-field-name": "BatchUpdateMonitorReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidChainTxIDs][400999010][Invalid Chain Tx IDs]!",
              "@StatusErr[UnknownMonitorCommand][400999008][Unknown Deploy Command]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/monitor/x/{projectName}/contract_log": {
      "post": {
        "tags": [
          "apis/monitor"
        ],
        "operationId": "CreateContractLog",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesBlockchainCreateContractLogReq"
                  },
                  {
                    "x-go-field-name": "CreateContractLogReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsContractLog"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[BlockchainNotFound][404999013][Blockchain Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ContractLogConflict][409999011][Contract Log Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/monitor/x/{projectName}/contract_log/{cmd}": {
      "put": {
        "tags": [
          "apis/monitor"
        ],
        "operationId": "ControlContractLog",
        "parameters": [
          {
            "name": "cmd",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsMonitorCmd"
                },
                {
                  "x-go-field-name": "Cmd",
                  "x-tag-name": "cmd"
                }
              ]
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesBlockchainBatchUpdateMonitorReq"
                  },
                  {
                    "x-go-field-name": "BatchUpdateMonitorReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidContractLogIDs][400999009][Invalid Contract Log IDs]!",
              "@StatusErr[UnknownMonitorCommand][400999008][Unknown Deploy Command]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/monitor/x/{projectName}/contract_log/{contractLogID}": {
      "delete": {
        "tags": [
          "apis/monitor"
        ],
        "operationId": "RemoveContractLog",
        "parameters": [
          {
            "name": "contractLogID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "ContractLogID",
                  "x-tag-name": "contractLogID"
                }
              ]
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ContractLogNotFound][404999014][Contract Log Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/operator": {
      "post": {
        "tags": [
          "apis/operator"
        ],
        "operationId": "CreateOperator",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesOperatorCreateReq"
                  },
                  {
                    "x-go-field-name": "CreateReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsOperator"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidPrivateKey][400999006][Invalid Private Key]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[OperatorConflict][409999017][Operator Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/operator/data/{operatorID}": {
      "delete": {
        "tags": [
          "apis/operator"
        ],
        "operationId": "RemoveOperator",
        "parameters": [
          {
            "name": "operatorID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "OperatorID",
                  "x-tag-name": "operatorID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoOperatorPermission][401999005][No Operator Permission]!"
            ]
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[OccupiedOperator][403999008][Occupied Operator]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[OperatorNotFound][404999019][Operator Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/operator/datalist": {
      "get": {
        "tags": [
          "apis/operator"
        ],
        "operationId": "ListOperator",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": 0,
              "default": "0",
              "x-go-field-name": "Offset",
              "x-tag-name": "offset,omitempty",
              "x-tag-validate": "@int64[0,]"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -1,
              "default": "10",
              "x-go-field-name": "Size",
              "x-tag-name": "size,omitempty",
              "x-tag-validate": "@int64[-1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesOperatorListDetailRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/project": {
      "post": {
        "tags": [
          "apis/project"
        ],
        "operationId": "CreateProject",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesProjectCreateReq"
                  },
                  {
                    "x-go-field-name": "CreateReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesProjectCreateRsp"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[RequestTransformFailed][400000000][RequestTransformFailed]"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidEventToken][401999015][Invalid Event Token]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!"
            ]
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[TopicAlreadySubscribed][403999007][Topic Already Subscribed]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigConflict][409999006][Config Conflict]!",
              "@StatusErr[ProjectNameConflict][409999002][Project Name Conflict]!"
            ]
          },
          "499": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ClientClosedRequest][499000000][ClientClosedRequest]"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigInitFailed][500999005][Config Init Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[MqttConnectFailed][500999011][MQTT Connect Failed]!",
              "@StatusErr[MqttSubscribeFailed][500999010][MQTT Subscribe Failed]!",
              "@StatusErr[RequestFailed][500000000][RequestFailed]"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/project/datalist": {
      "get": {
        "tags": [
          "apis/project"
        ],
        "operationId": "ListProject",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Names",
              "x-tag-name": "name,omitempty"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": 0,
              "default": "0",
              "x-go-field-name": "Offset",
              "x-tag-name": "offset,omitempty",
              "x-tag-validate": "@int64[0,]"
            }
          },
          {
            "name": "projectID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "ProjectIDs",
              "x-tag-name": "projectID,omitempty"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -1,
              "default": "10",
              "x-go-field-name": "Size",
              "x-tag-name": "size,omitempty",
              "x-tag-validate": "@int64[-1,]"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Versions",
              "x-tag-name": "version,omitempty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesProjectListRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/project/detail_list": {
      "get": {
        "tags": [
          "apis/project"
        ],
        "operationId": "ListProjectDetail",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Names",
              "x-tag-name": "name,omitempty"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": 0,
              "default": "0",
              "x-go-field-name": "Offset",
              "x-tag-name": "offset,omitempty",
              "x-tag-validate": "@int64[0,]"
            }
          },
          {
            "name": "projectID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "ProjectIDs",
              "x-tag-name": "projectID,omitempty"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -1,
              "default": "10",
              "x-go-field-name": "Size",
              "x-tag-name": "size,omitempty",
              "x-tag-validate": "@int64[-1,]"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Versions",
              "x-tag-name": "version,omitempty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesProjectListDetailRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ResourceNotFound][404999004][Resource Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/project/x/{projectName}": {
      "delete": {
        "tags": [
          "apis/project"
        ],
        "operationId": "RemoveProject",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[BatchRemoveAppletFailed][500999009][Batch Remove Applet Failed]!",
              "@StatusErr[BatchRemoveWasmLogFailed][500999012][Batch Remove WasmLog Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[ConfigUninitFailed][500999006][Config Uninit Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/project/x/{projectName}/data": {
      "get": {
        "tags": [
          "apis/project"
        ],
        "operationId": "GetProject",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsProject"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DeprecatedProject][400999003][Deprecated Project]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/project_config/x/{projectName}/PROJECT_DATABASE": {
      "get": {
        "tags": [
          "apis/project_config"
        ],
        "operationId": "GetProjectSchema",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmDatabase"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ConfigNotFound][404999003][Config Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "post": {
        "tags": [
          "apis/project_config"
        ],
        "operationId": "CreateProjectSchema",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmDatabase"
                  },
                  {
                    "x-go-field-name": "Database"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsConfig"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigConflict][409999006][Config Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigInitFailed][500999005][Config Init Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/project_config/x/{projectName}/PROJECT_ENV": {
      "get": {
        "tags": [
          "apis/project_config"
        ],
        "operationId": "GetProjectEnv",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmEnv"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ConfigNotFound][404999003][Config Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "post": {
        "tags": [
          "apis/project_config"
        ],
        "operationId": "CreateOrUpdateProjectEnv",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmEnv"
                  },
                  {
                    "x-go-field-name": "Env"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsConfig"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidConfigType][400999002][Invalid Config Type]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigConflict][409999006][Config Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ConfigInitFailed][500999005][Config Init Failed]!",
              "@StatusErr[ConfigParseFailed][500999007][Config Parse Failed]!",
              "@StatusErr[ConfigUninitFailed][500999006][Config Uninit Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/project_operator/data/{projectID}": {
      "get": {
        "tags": [
          "apis/projectoperator"
        ],
        "operationId": "GetProjectOperator",
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "ProjectID",
                  "x-tag-name": "projectID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesOperatorDetail"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[OperatorNotFound][404999019][Operator Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[ProjectOperatorNotFound][404999021][Project Operator relationship Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/project_operator/{projectID}": {
      "delete": {
        "tags": [
          "apis/projectoperator"
        ],
        "operationId": "RemoveProjectOperator",
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "ProjectID",
                  "x-tag-name": "projectID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/project_operator/{projectID}/{operatorID}": {
      "post": {
        "tags": [
          "apis/projectoperator"
        ],
        "operationId": "CreateProjectOperator",
        "parameters": [
          {
            "name": "operatorID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "OperatorID",
                  "x-tag-name": "operatorID"
                }
              ]
            }
          },
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "ProjectID",
                  "x-tag-name": "projectID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsProjectOperator"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoOperatorPermission][401999005][No Operator Permission]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[OperatorNotFound][404999019][Operator Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[ProjectOperatorConflict][409999019][Project Operator relationship Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/publisher/data/{publisherID}": {
      "delete": {
        "tags": [
          "apis/publisher"
        ],
        "summary": "Remove Publisher by Publisher ID",
        "operationId": "RemovePublisher",
        "parameters": [
          {
            "name": "publisherID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "PublisherID",
                  "x-tag-name": "publisherID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[PublisherNotFound][404999008][Publisher Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "get": {
        "tags": [
          "apis/publisher"
        ],
        "summary": "Get Publisher by Publisher ID",
        "operationId": "GetPublisher",
        "parameters": [
          {
            "name": "publisherID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "PublisherID",
                  "x-tag-name": "publisherID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsPublisher"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[PublisherNotFound][404999008][Publisher Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/publisher/x/{projectName}": {
      "delete": {
        "tags": [
          "apis/publisher"
        ],
        "summary": "Remove Publisher by Given Conditions",
        "operationId": "BatchRemovePublisher",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Keys",
              "x-tag-name": "key,omitempty"
            }
          },
          {
            "name": "lname",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "LNameLike",
              "x-tag-name": "lname,omitempty"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "NameLike",
              "x-tag-name": "name,omitempty"
            }
          },
          {
            "name": "publisherIDs",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "PublisherIDs",
              "x-tag-name": "publisherIDs,omitempty"
            }
          },
          {
            "name": "rname",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "RNameLike",
              "x-tag-name": "rname,omitempty"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "get": {
        "tags": [
          "apis/publisher"
        ],
        "summary": "List Publishers by Conditions",
        "operationId": "ListPublisher",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Keys",
              "x-tag-name": "key,omitempty"
            }
          },
          {
            "name": "lname",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "LNameLike",
              "x-tag-name": "lname,omitempty"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "NameLike",
              "x-tag-name": "name,omitempty"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": 0,
              "default": "0",
              "x-go-field-name": "Offset",
              "x-tag-name": "offset,omitempty",
              "x-tag-validate": "@int64[0,]"
            }
          },
          {
            "name": "publisherIDs",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "PublisherIDs",
              "x-tag-name": "publisherIDs,omitempty"
            }
          },
          {
            "name": "rname",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "RNameLike",
              "x-tag-name": "rname,omitempty"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -1,
              "default": "10",
              "x-go-field-name": "Size",
              "x-tag-name": "size,omitempty",
              "x-tag-validate": "@int64[-1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesPublisherListRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "post": {
        "tags": [
          "apis/publisher"
        ],
        "summary": "Create Publisher",
        "operationId": "CreatePublisher",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesPublisherCreateReq"
                  },
                  {
                    "x-go-field-name": "CreateReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsPublisher"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAccessKeyIdentityType][400999013][Invalid Access Key Identity Type]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccessKeyNameConflict][409999020][Access Key Name Conflict]!",
              "@StatusErr[PublisherConflict][409999007][Publisher Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/publisher/x/{projectName}/{publisherID}": {
      "put": {
        "tags": [
          "apis/publisher"
        ],
        "summary": "Update Publisher by Publisher ID",
        "operationId": "UpdatePublisher",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "publisherID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "PublisherID",
                  "x-tag-name": "publisherID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesPublisherUpdateReq"
                  },
                  {
                    "x-go-field-name": "UpdateReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[PublisherNotFound][404999008][Publisher Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[PublisherConflict][409999007][Publisher Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/register/admin": {
      "post": {
        "tags": [
          "apis/account"
        ],
        "operationId": "CreateAccountByUsernameAndPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAccountCreateAccountByUsernameReq"
                  },
                  {
                    "x-go-field-name": "CreateAccountByUsernameReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAccountCreateAccountByUsernameRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[NoAdminPermission][401999006][No Admin Permission]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountConflict][409999015][Account Conflict]!",
              "@StatusErr[AccountIdentityConflict][409999014][Account Identity Conflict]!",
              "@StatusErr[AccountPasswordConflict][409999016][Account Password Conflict]!",
              "@StatusErr[OperatorConflict][409999017][Operator Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/resource": {
      "get": {
        "tags": [
          "apis/resource"
        ],
        "operationId": "ListResources",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "expireAfter",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
                },
                {
                  "x-go-field-name": "ExpireAfter",
                  "x-tag-name": "expireAfter,omitempty"
                }
              ]
            }
          },
          {
            "name": "expireBefore",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
                },
                {
                  "x-go-field-name": "ExpireBefore",
                  "x-tag-name": "expireBefore,omitempty"
                }
              ]
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Filenames",
              "x-tag-name": "filename,omitempty"
            }
          },
          {
            "name": "filenameLike",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "FilenameLike",
              "x-tag-name": "filenameLike,omitempty"
            }
          },
          {
            "name": "md5",
            "in": "query",
            "schema": {
              "type": "string",
              "x-go-field-name": "Md5",
              "x-tag-name": "md5,omitempty"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": 0,
              "default": "0",
              "x-go-field-name": "Offset",
              "x-tag-name": "offset,omitempty",
              "x-tag-validate": "@int64[0,]"
            }
          },
          {
            "name": "resourceID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "ResourceIDs",
              "x-tag-name": "resourceID,omitempty"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -1,
              "default": "10",
              "x-go-field-name": "Size",
              "x-tag-name": "size,omitempty",
              "x-tag-validate": "@int64[-1,]"
            }
          },
          {
            "name": "uploadedAfter",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
                },
                {
                  "x-go-field-name": "UploadedAfter",
                  "x-tag-name": "uploadedAfter,omitempty"
                }
              ]
            }
          },
          {
            "name": "uploadedBefore",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
                },
                {
                  "x-go-field-name": "UploadedBefore",
                  "x-tag-name": "uploadedBefore,omitempty"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesResourceListRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/resource/data/{resourceID}": {
      "get": {
        "tags": [
          "apis/resource"
        ],
        "summary": "DownloadResource download resource by resource id",
        "operationId": "DownloadResource",
        "parameters": [
          {
            "name": "resourceID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "ResourceID",
                  "x-tag-name": "resourceID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitHttptransportHttpxAttachment"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoResourcePermission][401999017][No Resource Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ResourceNotFound][404999004][Resource Not Found]!",
              "@StatusErr[ResourcePermNotFound][404999010][Resource Perm Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[FetchResourceFailed][500999004][Fetch Resource Failed]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/resource/url/{resourceID}": {
      "get": {
        "tags": [
          "apis/resource"
        ],
        "operationId": "GetDownloadResourceUrl",
        "parameters": [
          {
            "name": "resourceID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "ResourceID",
                  "x-tag-name": "resourceID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesResourceDownLoadResourceRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoResourcePermission][401999017][No Resource Permission]!"
            ]
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[UnsupportedFSOperator][403999009][Unsupported FileSystem Operator]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ResourceNotFound][404999004][Resource Not Found]!",
              "@StatusErr[ResourcePermNotFound][404999010][Resource Perm Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/resource/{resourceID}": {
      "delete": {
        "tags": [
          "apis/resource"
        ],
        "operationId": "RemoveResource",
        "parameters": [
          {
            "name": "resourceID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "ResourceID",
                  "x-tag-name": "resourceID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoResourcePermission][401999017][No Resource Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ResourcePermNotFound][404999010][Resource Perm Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/strategy/data/{strategyID}": {
      "delete": {
        "tags": [
          "apis/strategy"
        ],
        "operationId": "RemoveStrategy",
        "parameters": [
          {
            "name": "strategyID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "StrategyID",
                  "x-tag-name": "strategyID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[StrategyNotFound][404999007][Strategy Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "get": {
        "tags": [
          "apis/strategy"
        ],
        "operationId": "GetStrategy",
        "parameters": [
          {
            "name": "strategyID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "StrategyID",
                  "x-tag-name": "strategyID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsStrategy"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[StrategyNotFound][404999007][Strategy Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/strategy/x/{projectName}": {
      "delete": {
        "tags": [
          "apis/strategy"
        ],
        "operationId": "BatchRemoveStrategy",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "appletID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "AppletIDs",
              "x-tag-name": "appletID,omitempty"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "EventTypes",
              "x-tag-name": "eventType,omitempty"
            }
          },
          {
            "name": "handler",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Handlers",
              "x-tag-name": "handler,omitempty"
            }
          },
          {
            "name": "strategyID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "StrategyIDs",
              "x-tag-name": "strategyID,omitempty"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "post": {
        "tags": [
          "apis/strategy"
        ],
        "operationId": "CreateStrategy",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesStrategyCreateReq"
                  },
                  {
                    "x-go-field-name": "CreateReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsStrategy"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[StrategyConflict][409999005][Strategy Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/strategy/x/{projectName}/datalist": {
      "get": {
        "tags": [
          "apis/strategy"
        ],
        "operationId": "ListStrategy",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "appletID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "AppletIDs",
              "x-tag-name": "appletID,omitempty"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "EventTypes",
              "x-tag-name": "eventType,omitempty"
            }
          },
          {
            "name": "handler",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-field-name": "Handlers",
              "x-tag-name": "handler,omitempty"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": 0,
              "default": "0",
              "x-go-field-name": "Offset",
              "x-tag-name": "offset,omitempty",
              "x-tag-validate": "@int64[0,]"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -1,
              "default": "10",
              "x-go-field-name": "Size",
              "x-tag-name": "size,omitempty",
              "x-tag-validate": "@int64[-1,]"
            }
          },
          {
            "name": "strategyID",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              "x-go-field-name": "StrategyIDs",
              "x-tag-name": "strategyID,omitempty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesStrategyListRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/strategy/{strategyID}": {
      "put": {
        "tags": [
          "apis/strategy"
        ],
        "operationId": "UpdateStrategy",
        "parameters": [
          {
            "name": "strategyID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "StrategyID",
                  "x-tag-name": "strategyID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesStrategyCreateReq"
                  },
                  {
                    "x-go-field-name": "UpdateReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[StrategyNotFound][404999007][Strategy Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[StrategyConflict][409999005][Strategy Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/traffic/data/{trafficLimitID}": {
      "get": {
        "tags": [
          "apis/traffic_limit"
        ],
        "operationId": "GetTrafficLimit",
        "parameters": [
          {
            "name": "trafficLimitID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "TrafficLimitID",
                  "x-tag-name": "trafficLimitID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsTrafficLimit"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoAdminPermission][401999006][No Admin Permission]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[TrafficLimitNotFound][404999020][Traffic Limit Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/traffic/x/{projectName}": {
      "delete": {
        "tags": [
          "apis/traffic_limit"
        ],
        "summary": "BatchRemoveTrafficLimit Remove TrafficLimit by Given Conditions",
        "operationId": "BatchRemoveTrafficLimit",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "apiType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsTrafficLimitType"
                },
                {
                  "x-go-field-name": "ApiType",
                  "x-tag-name": "apiType,omitempty"
                }
              ]
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidDeleteCondition][400999007][Invalid Delete Condition]!"
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoAdminPermission][401999006][No Admin Permission]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      },
      "post": {
        "tags": [
          "apis/traffic_limit"
        ],
        "operationId": "CreateTrafficLimit",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesTrafficlimitCreateReq"
                  },
                  {
                    "x-go-field-name": "CreateReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsTrafficLimit"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoAdminPermission][401999006][No Admin Permission]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[TrafficLimitConflict][409999018][Traffic Limit Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CreateTrafficSchedulerFailed][500999015][Create Traffic Scheduler Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/traffic/x/{projectName}/data/{trafficLimitID}": {
      "delete": {
        "tags": [
          "apis/traffic_limit"
        ],
        "summary": "RemoveTrafficLimit Remove TrafficLimit by TrafficLimit ID",
        "operationId": "RemoveTrafficLimit",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "trafficLimitID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "TrafficLimitID",
                  "x-tag-name": "trafficLimitID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoAdminPermission][401999006][No Admin Permission]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[TrafficLimitNotFound][404999020][Traffic Limit Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/traffic/x/{projectName}/datalist": {
      "get": {
        "tags": [
          "apis/traffic_limit"
        ],
        "operationId": "ListTrafficLimit",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "apiType",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsTrafficLimitType"
                },
                {
                  "x-go-field-name": "ApiType",
                  "x-tag-name": "apiType,omitempty"
                }
              ]
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": 0,
              "default": "0",
              "x-go-field-name": "Offset",
              "x-tag-name": "offset,omitempty",
              "x-tag-validate": "@int64[0,]"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -1,
              "default": "10",
              "x-go-field-name": "Size",
              "x-tag-name": "size,omitempty",
              "x-tag-validate": "@int64[-1,]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesTrafficlimitListRsp"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoAdminPermission][401999006][No Admin Permission]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/traffic/x/{projectName}/{trafficLimitID}": {
      "put": {
        "tags": [
          "apis/traffic_limit"
        ],
        "operationId": "UpdateTrafficLimit",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "projectName",
              "x-go-field-name": "ProjectName",
              "x-tag-name": "projectName",
              "x-tag-validate": "@projectName"
            }
          },
          {
            "name": "trafficLimitID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "TrafficLimitID",
                  "x-tag-name": "trafficLimitID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesTrafficlimitUpdateReq"
                  },
                  {
                    "x-go-field-name": "UpdateReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsTrafficLimit"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[CurrentAccountAbsence][401999013][Current Account Absence]!",
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoAdminPermission][401999006][No Admin Permission]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountIdentityNotFound][404999009][Account Identity Not Found]!",
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[TrafficLimitNotFound][404999020][Traffic Limit Not Found]!"
            ]
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[TrafficLimitConflict][409999018][Traffic Limit Conflict]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[UpdateTrafficSchedulerFailed][500999016][Update Traffic Scheduler Failed]!"
            ]
          }
        }
      }
    },
    "/srv-applet-mgr/v0/wasmlog/{instanceID}": {
      "delete": {
        "tags": [
          "apis/wasmlog"
        ],
        "operationId": "RemoveWasmLogByInstanceID",
        "parameters": [
          {
            "name": "instanceID",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
                },
                {
                  "x-go-field-name": "InstanceID",
                  "x-tag-name": "instanceID"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInHeader",
              "x-tag-name": "Authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          },
          {
            "name": "authorization",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "x-go-field-name": "AuthInQuery",
              "x-tag-name": "authorization,omitempty",
              "x-tag-validate": "@string[1,]"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[InvalidAuthAccountID][401999003][Invalid Auth Account ID]!",
              "@StatusErr[InvalidAuthValue][401999002][Invalid Auth Value]!",
              "@StatusErr[InvalidClaim][401999003][Invalid Claim]!",
              "@StatusErr[InvalidToken][401999002][Invalid Token]!",
              "@StatusErr[NoProjectPermission][401999004][No Project Permission]!"
            ]
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[AccountNotFound][404999017][Account Not Found]!",
              "@StatusErr[AppletNotFound][404999005][Applet Not Found]!",
              "@StatusErr[InstanceNotFound][404999006][Instance Not Found]!",
              "@StatusErr[ProjectNotFound][404999002][Project Not Found]!",
              "@StatusErr[ResourceNotFound][404999004][Resource Not Found]!"
            ]
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
                }
              }
            },
            "x-status-errors": [
              "@StatusErr[BatchRemoveWasmLogFailed][500999012][Batch Remove WasmLog Failed]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!",
              "@StatusErr[DatabaseError][500999002][Database Error]!"
            ]
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "apis/version"
        ],
        "operationId": "VersionRouter",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BytesBuffer": {
        "type": "string",
        "format": "binary",
        "x-go-vendor-type": "bytes.Buffer",
        "x-id": "BytesBuffer"
      },
      "CurrentAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsAccount"
          },
          {
            "type": "object",
            "x-id": "CurrentAccount"
          }
        ]
      },
      "CurrentPublisher": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsPublisher"
          },
          {
            "type": "object",
            "x-id": "CurrentPublisher"
          }
        ]
      },
      "DataPushReq": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "device_id": {
              "type": "string",
              "x-go-field-name": "DeviceID",
              "x-tag-json": "device_id"
            },
            "event_type": {
              "type": "string",
              "x-go-field-name": "EventType",
              "x-tag-json": "event_type,omitempty"
            },
            "payload": {
              "type": "string",
              "x-go-field-name": "Payload",
              "x-tag-json": "payload"
            },
            "timestamp": {
              "type": "integer",
              "format": "int64",
              "x-go-field-name": "Timestamp",
              "x-tag-json": "timestamp,omitempty"
            }
          },
          "required": [
            "device_id",
            "payload"
          ]
        },
        "x-id": "DataPushReq"
      },
      "DataPushRsp": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32",
            "x-go-field-name": "Index",
            "x-tag-json": "index"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesEventResult"
            },
            "x-go-field-name": "Results",
            "x-tag-json": "results"
          }
        },
        "required": [
          "index",
          "results"
        ],
        "x-id": "DataPushRsp"
      },
      "DataPushRsps": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DataPushRsp"
        },
        "x-id": "DataPushRsps"
      },
      "EthClientRsp": {
        "type": "object",
        "properties": {
          "clients": {
            "type": "string",
            "x-go-field-name": "Clients",
            "x-tag-json": "clients"
          }
        },
        "required": [
          "clients"
        ],
        "x-id": "EthClientRsp"
      },
      "GithubComMachinefiW3BstreamPkgDependsBaseTypesDuration": {
        "type": "integer",
        "format": "int64",
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/base/types.Duration",
        "x-id": "GithubComMachinefiW3BstreamPkgDependsBaseTypesDuration"
      },
      "GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID": {
        "type": "integer",
        "format": "uint64",
        "description": "Number.MAX_SAFE_INTEGER JavaScript (2^53 – 1)",
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/base/types.SFID",
        "x-id": "GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
      },
      "GithubComMachinefiW3BstreamPkgDependsBaseTypesSFIDs": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
        },
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/base/types.SFIDs",
        "x-id": "GithubComMachinefiW3BstreamPkgDependsBaseTypesSFIDs"
      },
      "GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp": {
        "type": "string",
        "format": "date-time",
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/base/types.Timestamp",
        "x-id": "GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
      },
      "GithubComMachinefiW3BstreamPkgDependsKitHttptransportHttpxAttachment": {
        "type": "string",
        "format": "binary",
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/kit/httptransport/httpx.Attachment",
        "x-id": "GithubComMachinefiW3BstreamPkgDependsKitHttptransportHttpxAttachment"
      },
      "GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesBool": {
        "type": "boolean",
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/kit/sqlx/datatypes.Bool",
        "x-id": "GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesBool"
      },
      "GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes": {
        "type": "object",
        "properties": {
          "createdAt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
              },
              {
                "x-go-field-name": "CreatedAt",
                "x-tag-json": "createdAt"
              }
            ]
          },
          "updatedAt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
              },
              {
                "x-go-field-name": "UpdatedAt",
                "x-tag-json": "updatedAt"
              }
            ]
          }
        },
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/kit/sqlx/datatypes.OperationTimes",
        "x-id": "GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
      },
      "GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimesWithDeleted": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
          },
          {
            "type": "object",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/kit/sqlx/datatypes.OperationTimesWithDeleted",
            "x-id": "GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimesWithDeleted"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID": {
        "type": "object",
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/kit/sqlx/datatypes.PrimaryID",
        "x-id": "GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
      },
      "GithubComMachinefiW3BstreamPkgDependsKitStatusxErrorField": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "Field path: prop.slice[2].a",
            "x-go-field-name": "Field",
            "x-tag-json": "field",
            "x-tag-xml": "field"
          },
          "in": {
            "type": "string",
            "description": "In location eq. body, query, header, path, formData",
            "x-go-field-name": "In",
            "x-tag-json": "in",
            "x-tag-xml": "in"
          },
          "msg": {
            "type": "string",
            "description": "Msg message",
            "x-go-field-name": "Msg",
            "x-tag-json": "msg",
            "x-tag-xml": "msg"
          }
        },
        "required": [
          "field",
          "msg",
          "in"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/kit/statusx.ErrorField",
        "x-id": "GithubComMachinefiW3BstreamPkgDependsKitStatusxErrorField"
      },
      "GithubComMachinefiW3BstreamPkgDependsKitStatusxErrorFields": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxErrorField"
        },
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/kit/statusx.ErrorFields",
        "x-id": "GithubComMachinefiW3BstreamPkgDependsKitStatusxErrorFields"
      },
      "GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr": {
        "type": "object",
        "properties": {
          "canBeTalk": {
            "type": "boolean",
            "description": "can be task error; for client to should error msg to end user",
            "x-go-field-name": "CanBeTalk",
            "x-tag-json": "canBeTalk",
            "x-tag-xml": "canBeTalk"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "unique err code",
            "x-go-field-name": "Code",
            "x-tag-json": "code",
            "x-tag-xml": "code"
          },
          "desc": {
            "type": "string",
            "description": "desc of err",
            "x-go-field-name": "Desc",
            "x-tag-json": "desc",
            "x-tag-xml": "desc"
          },
          "fields": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitStatusxErrorFields"
              },
              {
                "description": "error in where fields",
                "x-go-field-name": "Fields",
                "x-tag-json": "fields",
                "x-tag-xml": "fields"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "request ID or other request context",
            "x-go-field-name": "ID",
            "x-tag-json": "id",
            "x-tag-xml": "id"
          },
          "key": {
            "type": "string",
            "description": "key of err",
            "x-go-field-name": "Key",
            "x-tag-json": "key",
            "x-tag-xml": "key"
          },
          "msg": {
            "type": "string",
            "description": "msg of err",
            "x-go-field-name": "Msg",
            "x-tag-json": "msg",
            "x-tag-xml": "msg"
          },
          "sources": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "error tracing",
            "x-go-field-name": "Sources",
            "x-tag-json": "sources",
            "x-tag-xml": "sources"
          }
        },
        "required": [
          "key",
          "code",
          "msg",
          "desc",
          "canBeTalk",
          "id",
          "sources",
          "fields"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/depends/kit/statusx.StatusErr",
        "x-id": "GithubComMachinefiW3BstreamPkgDependsKitStatusxStatusErr"
      },
      "GithubComMachinefiW3BstreamPkgEnumsAccessKeyIdentityType": {
        "type": "string",
        "enum": [
          "ACCOUNT",
          "PUBLISHER"
        ],
        "x-enum-labels": [
          "ACCOUNT",
          "PUBLISHER"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.AccessKeyIdentityType",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsAccessKeyIdentityType"
      },
      "GithubComMachinefiW3BstreamPkgEnumsAccountRole": {
        "type": "string",
        "enum": [
          "ADMIN",
          "DEVELOPER"
        ],
        "x-enum-labels": [
          "ADMIN",
          "DEVELOPER"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.AccountRole",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsAccountRole"
      },
      "GithubComMachinefiW3BstreamPkgEnumsAccountState": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ],
        "x-enum-labels": [
          "ENABLED",
          "DISABLED"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.AccountState",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsAccountState"
      },
      "GithubComMachinefiW3BstreamPkgEnumsCacheMode": {
        "type": "string",
        "enum": [
          "MEMORY",
          "REDIS"
        ],
        "x-enum-labels": [
          "MEMORY",
          "REDIS"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.CacheMode",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsCacheMode"
      },
      "GithubComMachinefiW3BstreamPkgEnumsConfigType": {
        "type": "string",
        "enum": [
          "PROJECT_DATABASE",
          "INSTANCE_CACHE",
          "PROJECT_ENV",
          "PROJECT_MQTT"
        ],
        "x-enum-labels": [
          "PROJECT_DATABASE",
          "INSTANCE_CACHE",
          "PROJECT_ENV",
          "PROJECT_MQTT"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.ConfigType",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsConfigType"
      },
      "GithubComMachinefiW3BstreamPkgEnumsDeployCmd": {
        "type": "string",
        "enum": [
          "START",
          "HUNGUP"
        ],
        "x-enum-labels": [
          "start wasm vm",
          "stop wasm vm"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.DeployCmd",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsDeployCmd"
      },
      "GithubComMachinefiW3BstreamPkgEnumsInstanceState": {
        "type": "string",
        "enum": [
          "STARTED",
          "STOPPED"
        ],
        "x-enum-labels": [
          "ready to receive data",
          "stopped to receive data"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.InstanceState",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsInstanceState"
      },
      "GithubComMachinefiW3BstreamPkgEnumsMonitorCmd": {
        "type": "string",
        "enum": [
          "START",
          "PAUSE"
        ],
        "x-enum-labels": [
          "START",
          "PAUSE"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.MonitorCmd",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsMonitorCmd"
      },
      "GithubComMachinefiW3BstreamPkgEnumsProtocol": {
        "type": "string",
        "enum": [
          "TCP",
          "UDP",
          "WEBSOCET",
          "HTTP",
          "HTTPS",
          "MQTT"
        ],
        "x-enum-labels": [
          "tcp",
          "udp",
          "websocket",
          "http",
          "https",
          "mqtt"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.Protocol",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsProtocol"
      },
      "GithubComMachinefiW3BstreamPkgEnumsTrafficLimitType": {
        "type": "string",
        "enum": [
          "EVENT",
          "BLOCKCHAIN"
        ],
        "x-enum-labels": [
          "EVENT",
          "BLOCKCHAIN"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.TrafficLimitType",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsTrafficLimitType"
      },
      "GithubComMachinefiW3BstreamPkgEnumsWasmDBDatatype": {
        "type": "string",
        "enum": [
          "INT",
          "INT8",
          "INT16",
          "INT32",
          "INT64",
          "UINT",
          "UINT8",
          "UINT16",
          "UINT32",
          "UINT64",
          "FLOAT32",
          "FLOAT64",
          "TEXT",
          "BOOL",
          "TIMESTAMP",
          "DECIMAL",
          "NUMERIC"
        ],
        "x-enum-labels": [
          "INT",
          "INT8",
          "INT16",
          "INT32",
          "INT64",
          "UINT",
          "UINT8",
          "UINT16",
          "UINT32",
          "UINT64",
          "FLOAT32",
          "FLOAT64",
          "TEXT",
          "BOOL",
          "use epoch timestamp (integer, UTC)",
          "DECIMAL",
          "NUMERIC"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.WasmDBDatatype",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsWasmDBDatatype"
      },
      "GithubComMachinefiW3BstreamPkgEnumsWasmDBDialect": {
        "type": "string",
        "enum": [
          "POSTGRES"
        ],
        "x-enum-labels": [
          "POSTGRES"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/enums.WasmDBDialect",
        "x-id": "GithubComMachinefiW3BstreamPkgEnumsWasmDBDialect"
      },
      "GithubComMachinefiW3BstreamPkgModelsAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelAccount"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsAccountInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimesWithDeleted"
          },
          {
            "type": "object",
            "description": "Account w3bstream account",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.Account",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsAccount"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsAccountInfo": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "x-go-field-name": "Avatar",
            "x-tag-json": "avatar,omitempty"
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsMeta"
              },
              {
                "x-go-field-name": "Meta",
                "x-tag-json": "meta,omitempty"
              }
            ]
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsAccountRole"
              },
              {
                "x-go-field-name": "Role",
                "x-tag-json": "role"
              }
            ]
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsAccountState"
              },
              {
                "x-go-field-name": "State",
                "x-tag-json": "state"
              }
            ]
          }
        },
        "required": [
          "role",
          "state"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.AccountInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsAccountInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsApplet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelProject"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelApplet"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelResource"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsAppletInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
          },
          {
            "type": "object",
            "description": "Applet database model applet",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.Applet",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsApplet"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsAppletInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-go-field-name": "Name",
            "x-tag-json": "name"
          }
        },
        "required": [
          "name"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.AppletInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsAppletInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsChainHeight": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelChainHeight"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsChainHeightData"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
          },
          {
            "type": "object",
            "description": "ChainHeight database model chainheight",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ChainHeight",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsChainHeight"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsChainHeightData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsChainHeightInfo"
          },
          {
            "type": "object",
            "properties": {
              "projectName": {
                "type": "string",
                "x-go-field-name": "ProjectName",
                "x-tag-json": "projectName"
              }
            },
            "required": [
              "projectName"
            ],
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ChainHeightData",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsChainHeightData"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsChainHeightInfo": {
        "type": "object",
        "properties": {
          "chainID": {
            "type": "integer",
            "format": "uint64",
            "x-go-field-name": "ChainID",
            "x-tag-json": "chainID"
          },
          "eventType": {
            "type": "string",
            "x-go-field-name": "EventType",
            "x-tag-json": "eventType,omitempty,default='MONITOR_DEFAULT'"
          },
          "height": {
            "type": "integer",
            "format": "uint64",
            "x-go-field-name": "Height",
            "x-tag-json": "height"
          },
          "paused": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesBool"
              },
              {
                "x-go-field-name": "Paused",
                "x-tag-json": "paused,omitempty,default='false'"
              }
            ]
          }
        },
        "required": [
          "chainID",
          "height"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ChainHeightInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsChainHeightInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsChainTx": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelChainTx"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsChainTxData"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
          },
          {
            "type": "object",
            "description": "ChainTx database model chain tx",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ChainTx",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsChainTx"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsChainTxData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsChainTxInfo"
          },
          {
            "type": "object",
            "properties": {
              "projectName": {
                "type": "string",
                "x-go-field-name": "ProjectName",
                "x-tag-json": "projectName"
              }
            },
            "required": [
              "projectName"
            ],
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ChainTxData",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsChainTxData"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsChainTxInfo": {
        "type": "object",
        "properties": {
          "chainID": {
            "type": "integer",
            "format": "uint64",
            "x-go-field-name": "ChainID",
            "x-tag-json": "chainID"
          },
          "eventType": {
            "type": "string",
            "x-go-field-name": "EventType",
            "x-tag-json": "eventType,omitempty,default='MONITOR_DEFAULT'"
          },
          "paused": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesBool"
              },
              {
                "x-go-field-name": "Paused",
                "x-tag-json": "paused,omitempty,default='false'"
              }
            ]
          },
          "txAddress": {
            "type": "string",
            "x-go-field-name": "TxAddress",
            "x-tag-json": "txAddress"
          }
        },
        "required": [
          "chainID",
          "txAddress"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ChainTxInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsChainTxInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsConfig": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelConfig"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsConfigBase"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
          },
          {
            "type": "object",
            "description": "Config database model config for configuration management",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.Config",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsConfig"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsConfigBase": {
        "type": "object",
        "properties": {
          "relID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "RelID",
                "x-tag-json": "relID"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsConfigType"
              },
              {
                "x-go-field-name": "Type",
                "x-tag-json": "type"
              }
            ]
          }
        },
        "required": [
          "relID",
          "type"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ConfigBase",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsConfigBase"
      },
      "GithubComMachinefiW3BstreamPkgModelsContractLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelContractLog"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsContractLogData"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
          },
          {
            "type": "object",
            "description": "ContractLog database model contract log",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ContractLog",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsContractLog"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsContractLogData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsContractLogInfo"
          },
          {
            "type": "object",
            "properties": {
              "projectName": {
                "type": "string",
                "x-go-field-name": "ProjectName",
                "x-tag-json": "projectName"
              }
            },
            "required": [
              "projectName"
            ],
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ContractLogData",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsContractLogData"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsContractLogInfo": {
        "type": "object",
        "properties": {
          "blockCurrent": {
            "type": "integer",
            "format": "uint64",
            "x-go-field-name": "BlockCurrent",
            "x-tag-json": "blockCurrent,omitempty"
          },
          "blockEnd": {
            "type": "integer",
            "format": "uint64",
            "x-go-field-name": "BlockEnd",
            "x-tag-json": "blockEnd,omitempty"
          },
          "blockStart": {
            "type": "integer",
            "format": "uint64",
            "x-go-field-name": "BlockStart",
            "x-tag-json": "blockStart"
          },
          "chainID": {
            "type": "integer",
            "format": "uint64",
            "x-go-field-name": "ChainID",
            "x-tag-json": "chainID"
          },
          "contractAddress": {
            "type": "string",
            "x-go-field-name": "ContractAddress",
            "x-tag-json": "contractAddress"
          },
          "eventType": {
            "type": "string",
            "x-go-field-name": "EventType",
            "x-tag-json": "eventType,omitempty,default='MONITOR_DEFAULT'"
          },
          "paused": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesBool"
              },
              {
                "x-go-field-name": "Paused",
                "x-tag-json": "paused,omitempty,default='false'"
              }
            ]
          },
          "topic0": {
            "type": "string",
            "x-go-field-name": "Topic0",
            "x-tag-json": "topic0,omitempty"
          },
          "topic1": {
            "type": "string",
            "x-go-field-name": "Topic1",
            "x-tag-json": "topic1,omitempty"
          },
          "topic2": {
            "type": "string",
            "x-go-field-name": "Topic2",
            "x-tag-json": "topic2,omitempty"
          },
          "topic3": {
            "type": "string",
            "x-go-field-name": "Topic3",
            "x-tag-json": "topic3,omitempty"
          }
        },
        "required": [
          "chainID",
          "contractAddress",
          "blockStart"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ContractLogInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsContractLogInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsCronJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelCronJob"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelProject"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsCronJobInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimesWithDeleted"
          },
          {
            "type": "object",
            "description": "CronJob schema for cron job information",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.CronJob",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsCronJob"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsCronJobInfo": {
        "type": "object",
        "properties": {
          "cronExpressions": {
            "type": "string",
            "x-go-field-name": "CronExpressions",
            "x-tag-json": "cronExpressions"
          },
          "eventType": {
            "type": "string",
            "x-go-field-name": "EventType",
            "x-tag-json": "eventType,omitempty"
          }
        },
        "required": [
          "cronExpressions"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.CronJobInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsCronJobInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsInstance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelInstance"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelApplet"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsInstanceInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
          },
          {
            "type": "object",
            "description": "Instance database model instance",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.Instance",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsInstance"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsInstanceInfo": {
        "type": "object",
        "properties": {
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsInstanceState"
              },
              {
                "x-go-field-name": "State",
                "x-tag-json": "state"
              }
            ]
          }
        },
        "required": [
          "state"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.InstanceInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsInstanceInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsMeta": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "propertyNames": {
          "type": "string"
        },
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.Meta",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsMeta"
      },
      "GithubComMachinefiW3BstreamPkgModelsOperator": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelAccount"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelOperator"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsOperatorInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimesWithDeleted"
          },
          {
            "type": "object",
            "description": "Operator schema for blockchain operate information",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.Operator",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsOperator"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsOperatorInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-go-field-name": "Name",
            "x-tag-json": "name"
          }
        },
        "required": [
          "name"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.OperatorInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsOperatorInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsProject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelProject"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelAccount"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsProjectName"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsProjectBase"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimesWithDeleted"
          },
          {
            "type": "object",
            "description": "Project schema for project information",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.Project",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsProject"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsProjectBase": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "x-go-field-name": "Description",
            "x-tag-json": "description,omitempty"
          },
          "protocol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsProtocol"
              },
              {
                "description": "Proto project protocol for event publisher",
                "x-go-field-name": "Proto",
                "x-tag-json": "protocol,omitempty"
              }
            ]
          },
          "version": {
            "type": "string",
            "description": "Version project version",
            "x-go-field-name": "Version",
            "x-tag-json": "version,omitempty"
          }
        },
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ProjectBase",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsProjectBase"
      },
      "GithubComMachinefiW3BstreamPkgModelsProjectName": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "format": "projectName",
            "description": "Name project name",
            "x-go-field-name": "Name",
            "x-tag-json": "name",
            "x-tag-validate": "@projectName"
          }
        },
        "required": [
          "name"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ProjectName",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsProjectName"
      },
      "GithubComMachinefiW3BstreamPkgModelsProjectOperator": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelProject"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelOperator"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimesWithDeleted"
          },
          {
            "type": "object",
            "description": "ProjectOperator schema for project operator relationship",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ProjectOperator",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsProjectOperator"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsPublisher": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelProject"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelPublisher"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsPublisherInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
          },
          {
            "type": "object",
            "description": "Publisher database model demo",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.Publisher",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsPublisher"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsPublisherInfo": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key the unique identifier for publisher",
            "x-go-field-name": "Key",
            "x-tag-json": "key"
          },
          "name": {
            "type": "string",
            "x-go-field-name": "Name",
            "x-tag-json": "name"
          },
          "token": {
            "type": "string",
            "x-go-field-name": "Token",
            "x-tag-json": "token"
          }
        },
        "required": [
          "name",
          "key",
          "token"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.PublisherInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsPublisherInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelAccount": {
        "type": "object",
        "properties": {
          "accountID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "description": "\nAccountID  account id",
                "x-go-field-name": "AccountID",
                "x-tag-json": "accountID"
              }
            ]
          }
        },
        "required": [
          "accountID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelAccount",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelAccount"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelApplet": {
        "type": "object",
        "properties": {
          "appletID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "AppletID",
                "x-tag-json": "appletID"
              }
            ]
          }
        },
        "required": [
          "appletID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelApplet",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelApplet"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelChainHeight": {
        "type": "object",
        "properties": {
          "chainHeightID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "ChainHeightID",
                "x-tag-json": "chainHeightID"
              }
            ]
          }
        },
        "required": [
          "chainHeightID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelChainHeight",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelChainHeight"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelChainTx": {
        "type": "object",
        "properties": {
          "chaintxID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "ChainTxID",
                "x-tag-json": "chaintxID"
              }
            ]
          }
        },
        "required": [
          "chaintxID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelChainTx",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelChainTx"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelConfig": {
        "type": "object",
        "properties": {
          "configID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "ConfigID",
                "x-tag-json": "configID"
              }
            ]
          }
        },
        "required": [
          "configID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelConfig",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelConfig"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelContractLog": {
        "type": "object",
        "properties": {
          "contractlogID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "ContractLogID",
                "x-tag-json": "contractlogID"
              }
            ]
          }
        },
        "required": [
          "contractlogID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelContractLog",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelContractLog"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelCronJob": {
        "type": "object",
        "properties": {
          "cronJobID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "CronJobID",
                "x-tag-json": "cronJobID"
              }
            ]
          }
        },
        "required": [
          "cronJobID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelCronJob",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelCronJob"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelInstance": {
        "type": "object",
        "properties": {
          "instanceID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "InstanceID",
                "x-tag-json": "instanceID"
              }
            ]
          }
        },
        "required": [
          "instanceID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelInstance",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelInstance"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelOperator": {
        "type": "object",
        "properties": {
          "operatorID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "OperatorID",
                "x-tag-json": "operatorID"
              }
            ]
          }
        },
        "required": [
          "operatorID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelOperator",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelOperator"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelProject": {
        "type": "object",
        "properties": {
          "projectID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "ProjectID",
                "x-tag-json": "projectID"
              }
            ]
          }
        },
        "required": [
          "projectID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelProject",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelProject"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelPublisher": {
        "type": "object",
        "properties": {
          "publisherID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "PublisherID",
                "x-tag-json": "publisherID"
              }
            ]
          }
        },
        "required": [
          "publisherID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelPublisher",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelPublisher"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelResource": {
        "type": "object",
        "properties": {
          "resourceID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "ResourceID",
                "x-tag-json": "resourceID"
              }
            ]
          }
        },
        "required": [
          "resourceID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelResource",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelResource"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelStrategy": {
        "type": "object",
        "properties": {
          "strategyID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "StrategyID",
                "x-tag-json": "strategyID"
              }
            ]
          }
        },
        "required": [
          "strategyID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelStrategy",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelStrategy"
      },
      "GithubComMachinefiW3BstreamPkgModelsRelTrafficLimit": {
        "type": "object",
        "properties": {
          "trafficLimitID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "TrafficLimitID",
                "x-tag-json": "trafficLimitID"
              }
            ]
          }
        },
        "required": [
          "trafficLimitID"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.RelTrafficLimit",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsRelTrafficLimit"
      },
      "GithubComMachinefiW3BstreamPkgModelsResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelResource"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsResourceInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
          },
          {
            "type": "object",
            "description": "Resource database model wasm_resource",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.Resource",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsResource"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsResourceInfo": {
        "type": "object",
        "properties": {
          "md5": {
            "type": "string",
            "x-go-field-name": "Md5",
            "x-tag-json": "md5"
          },
          "path": {
            "type": "string",
            "description": "Path rel path",
            "x-go-field-name": "Path",
            "x-tag-json": "path"
          }
        },
        "required": [
          "path",
          "md5"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ResourceInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsResourceInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsResourceOwnerInfo": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "x-go-field-name": "Comment",
            "x-tag-json": "comment"
          },
          "expireAt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
              },
              {
                "x-go-field-name": "ExpireAt",
                "x-tag-json": "expireAt"
              }
            ]
          },
          "filename": {
            "type": "string",
            "x-go-field-name": "Filename",
            "x-tag-json": "filename"
          },
          "uploadedAt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
              },
              {
                "x-go-field-name": "UploadedAt",
                "x-tag-json": "uploadedAt"
              }
            ]
          }
        },
        "required": [
          "uploadedAt",
          "expireAt",
          "filename",
          "comment"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.ResourceOwnerInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsResourceOwnerInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsStrategy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelStrategy"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelProject"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelApplet"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsStrategyInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimesWithDeleted"
          },
          {
            "type": "object",
            "description": "Strategy event route strategy",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.Strategy",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsStrategy"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsStrategyInfo": {
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string",
            "x-go-field-name": "EventType",
            "x-tag-json": "eventType"
          },
          "handler": {
            "type": "string",
            "x-go-field-name": "Handler",
            "x-tag-json": "handler"
          }
        },
        "required": [
          "eventType",
          "handler"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.StrategyInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsStrategyInfo"
      },
      "GithubComMachinefiW3BstreamPkgModelsTrafficLimit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesPrimaryID"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelTrafficLimit"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelProject"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsTrafficLimitInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimesWithDeleted"
          },
          {
            "type": "object",
            "description": "TrafficLimit traffic limit for each project",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.TrafficLimit",
            "x-id": "GithubComMachinefiW3BstreamPkgModelsTrafficLimit"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModelsTrafficLimitInfo": {
        "type": "object",
        "properties": {
          "apiType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsTrafficLimitType"
              },
              {
                "x-go-field-name": "ApiType",
                "x-tag-json": "apiType"
              }
            ]
          },
          "duration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesDuration"
              },
              {
                "x-go-field-name": "Duration",
                "x-tag-json": "duration"
              }
            ]
          },
          "startAt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
              },
              {
                "x-go-field-name": "StartAt",
                "x-tag-json": "startAt"
              }
            ]
          },
          "threshold": {
            "type": "integer",
            "format": "int32",
            "x-go-field-name": "Threshold",
            "x-tag-json": "threshold"
          }
        },
        "required": [
          "threshold",
          "duration",
          "apiType",
          "startAt"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/models.TrafficLimitInfo",
        "x-id": "GithubComMachinefiW3BstreamPkgModelsTrafficLimitInfo"
      },
      "GithubComMachinefiW3BstreamPkgModulesAccessKeyCreateReqBase": {
        "type": "object",
        "properties": {
          "desc": {
            "type": "string",
            "description": "Description access token description",
            "x-go-field-name": "Desc",
            "x-tag-json": "desc,omitempty"
          },
          "expirationDays": {
            "type": "integer",
            "format": "int32",
            "description": "ExpirationDays access token valid in ExpirationDays, if 0 means token will not be expired.",
            "x-go-field-name": "ExpirationDays",
            "x-tag-json": "expirationDays,omitempty"
          },
          "name": {
            "type": "string",
            "description": "Name access token name",
            "x-go-field-name": "Name",
            "x-tag-json": "name"
          }
        },
        "required": [
          "name"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/access_key.CreateReqBase",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAccessKeyCreateReqBase"
      },
      "GithubComMachinefiW3BstreamPkgModulesAccessKeyCreateRsp": {
        "type": "object",
        "properties": {
          "accessKey": {
            "type": "string",
            "x-go-field-name": "AccessKey",
            "x-tag-json": "accessKey"
          },
          "desc": {
            "type": "string",
            "x-go-field-name": "Desc",
            "x-tag-json": "desc,omitempty"
          },
          "expiredAt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
              },
              {
                "x-go-field-name": "ExpiredAt",
                "x-go-star-level": 1,
                "x-tag-json": "expiredAt,omitempty"
              }
            ]
          },
          "identityID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "IdentityID",
                "x-tag-json": "identityID"
              }
            ]
          },
          "identityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsAccessKeyIdentityType"
              },
              {
                "x-go-field-name": "IdentityType",
                "x-tag-json": "identityType"
              }
            ]
          },
          "lastUsed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
              },
              {
                "x-go-field-name": "LastUsed",
                "x-go-star-level": 1,
                "x-tag-json": "lastUsed,omitempty"
              }
            ]
          },
          "name": {
            "type": "string",
            "x-go-field-name": "Name",
            "x-tag-json": "name"
          }
        },
        "required": [
          "name",
          "identityType",
          "identityID",
          "accessKey"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/access_key.CreateRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAccessKeyCreateRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesAccessKeyListData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
          },
          {
            "type": "object",
            "properties": {
              "desc": {
                "type": "string",
                "x-go-field-name": "Desc",
                "x-tag-json": "desc,omitempty"
              },
              "expiredAt": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
                  },
                  {
                    "x-go-field-name": "ExpiredAt",
                    "x-go-star-level": 1,
                    "x-tag-json": "expiredAt,omitempty"
                  }
                ]
              },
              "lastUsed": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
                  },
                  {
                    "x-go-field-name": "LastUsed",
                    "x-go-star-level": 1,
                    "x-tag-json": "lastUsed,omitempty"
                  }
                ]
              },
              "name": {
                "type": "string",
                "x-go-field-name": "Name",
                "x-tag-json": "name"
              }
            },
            "required": [
              "name"
            ],
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/access_key.ListData",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesAccessKeyListData"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesAccessKeyListRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAccessKeyListData"
            },
            "x-go-field-name": "Data",
            "x-tag-json": "data"
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "x-go-field-name": "Total",
            "x-tag-json": "total"
          }
        },
        "required": [
          "data",
          "total"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/access_key.ListRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAccessKeyListRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesAccountCreateAccountByUsernameReq": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "format": "url",
            "x-go-field-name": "AvatarURL",
            "x-tag-json": "avatarURL,omitempty",
            "x-tag-validate": "@url"
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsAccountRole"
              },
              {
                "x-go-field-name": "Role",
                "x-tag-json": "role"
              }
            ]
          },
          "username": {
            "type": "string",
            "x-go-field-name": "Username",
            "x-tag-json": "username"
          }
        },
        "required": [
          "username",
          "role"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/account.CreateAccountByUsernameReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAccountCreateAccountByUsernameReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesAccountCreateAccountByUsernameRsp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsAccount"
          },
          {
            "type": "object",
            "properties": {
              "password": {
                "type": "string",
                "x-go-field-name": "Password",
                "x-tag-json": "password"
              }
            },
            "required": [
              "password"
            ],
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/account.CreateAccountByUsernameRsp",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesAccountCreateAccountByUsernameRsp"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesAccountLoginByEthAddressReq": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message siwe serialized message",
            "x-go-field-name": "Message",
            "x-tag-json": "message"
          },
          "signature": {
            "type": "string",
            "description": "Signature should have '0x' prefix",
            "x-go-field-name": "Signature",
            "x-tag-json": "signature"
          }
        },
        "required": [
          "message",
          "signature"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/account.LoginByEthAddressReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAccountLoginByEthAddressReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesAccountLoginByUsernameReq": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "x-go-field-name": "Password",
            "x-tag-json": "password"
          },
          "username": {
            "type": "string",
            "x-go-field-name": "Username",
            "x-tag-json": "username"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/account.LoginByUsernameReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAccountLoginByUsernameReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesAccountLoginRsp": {
        "type": "object",
        "properties": {
          "accountID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "AccountID",
                "x-tag-json": "accountID"
              }
            ]
          },
          "accountRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsAccountRole"
              },
              {
                "x-go-field-name": "AccountRole",
                "x-tag-json": "accountRole"
              }
            ]
          },
          "expireAt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesTimestamp"
              },
              {
                "x-go-field-name": "ExpireAt",
                "x-tag-json": "expireAt"
              }
            ]
          },
          "issuer": {
            "type": "string",
            "x-go-field-name": "Issuer",
            "x-tag-json": "issuer"
          },
          "token": {
            "type": "string",
            "x-go-field-name": "Token",
            "x-tag-json": "token"
          }
        },
        "required": [
          "accountID",
          "accountRole",
          "token",
          "expireAt",
          "issuer"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/account.LoginRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAccountLoginRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesAccountUpdatePasswordReq": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "x-go-field-name": "OldPassword",
            "x-tag-json": "oldPassword"
          },
          "password": {
            "type": "string",
            "x-go-field-name": "Password",
            "x-tag-json": "password"
          }
        },
        "required": [
          "oldPassword",
          "password"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/account.UpdatePasswordReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAccountUpdatePasswordReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesAppletCreateReq": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "x-go-field-name": "File",
            "x-go-star-level": 1,
            "x-tag-name": "file"
          },
          "info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAppletInfo"
              },
              {
                "x-go-field-name": "Info",
                "x-tag-name": "info"
              }
            ]
          }
        },
        "required": [
          "file",
          "info"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/applet.CreateReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAppletCreateReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesAppletCreateRsp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsApplet"
          },
          {
            "type": "object",
            "properties": {
              "instance": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsInstance"
                  },
                  {
                    "x-go-field-name": "Instance",
                    "x-go-star-level": 1,
                    "x-tag-json": "instance"
                  }
                ]
              },
              "resource": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsResource"
                  },
                  {
                    "x-go-field-name": "Resource",
                    "x-go-star-level": 1,
                    "x-tag-json": "resource,omitempty"
                  }
                ]
              },
              "strategies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsStrategy"
                },
                "x-go-field-name": "Strategies",
                "x-tag-json": "strategies,omitempty"
              }
            },
            "required": [
              "instance"
            ],
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/applet.CreateRsp",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesAppletCreateRsp"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesAppletDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsApplet"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsResourceInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelInstance"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsInstanceInfo"
          },
          {
            "type": "object",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/applet.Detail",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesAppletDetail"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesAppletInfo": {
        "type": "object",
        "properties": {
          "appletName": {
            "type": "string",
            "x-go-field-name": "AppletName",
            "x-tag-json": "appletName"
          },
          "strategies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsStrategyInfo"
            },
            "x-go-field-name": "Strategies",
            "x-tag-json": "strategies,omitempty"
          },
          "wasmCache": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmCache"
              },
              {
                "x-go-field-name": "WasmCache",
                "x-go-star-level": 1,
                "x-tag-json": "wasmCache,omitempty"
              }
            ]
          },
          "wasmMd5": {
            "type": "string",
            "x-go-field-name": "WasmMd5",
            "x-tag-json": "wasmMd5,omitempty"
          },
          "wasmName": {
            "type": "string",
            "x-go-field-name": "WasmName",
            "x-tag-json": "wasmName,omitempty"
          }
        },
        "required": [
          "appletName"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/applet.Info",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAppletInfo"
      },
      "GithubComMachinefiW3BstreamPkgModulesAppletListRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsApplet"
            },
            "x-go-field-name": "Data",
            "x-tag-json": "data"
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "x-go-field-name": "Total",
            "x-tag-json": "total"
          }
        },
        "required": [
          "data",
          "total"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/applet.ListRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAppletListRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesAppletUpdateReq": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "x-go-field-name": "File",
            "x-go-star-level": 1,
            "x-tag-name": "file,omitempty"
          },
          "info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAppletInfo"
              },
              {
                "x-go-field-name": "Info",
                "x-tag-name": "info"
              }
            ]
          }
        },
        "required": [
          "info"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/applet.UpdateReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesAppletUpdateReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesBlockchainBatchUpdateMonitorReq": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
            },
            "x-go-field-name": "IDs",
            "x-tag-json": "ids"
          }
        },
        "required": [
          "ids"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/blockchain.BatchUpdateMonitorReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesBlockchainBatchUpdateMonitorReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesBlockchainCreateChainHeightReq": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsChainHeightInfo"
          },
          {
            "type": "object",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/blockchain.CreateChainHeightReq",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesBlockchainCreateChainHeightReq"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesBlockchainCreateChainTxReq": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsChainTxInfo"
          },
          {
            "type": "object",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/blockchain.CreateChainTxReq",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesBlockchainCreateChainTxReq"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesBlockchainCreateContractLogReq": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsContractLogInfo"
          },
          {
            "type": "object",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/blockchain.CreateContractLogReq",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesBlockchainCreateContractLogReq"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesCronjobCreateReq": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsCronJobInfo"
          },
          {
            "type": "object",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/cronjob.CreateReq",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesCronjobCreateReq"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesCronjobListRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsCronJob"
            },
            "x-go-field-name": "Data",
            "x-tag-json": "data"
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "x-go-field-name": "Total",
            "x-tag-json": "total"
          }
        },
        "required": [
          "data",
          "total"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/cronjob.ListRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesCronjobListRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesDeployCreateReq": {
        "type": "object",
        "properties": {
          "cache": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmCache"
              },
              {
                "x-go-field-name": "Cache",
                "x-go-star-level": 1,
                "x-tag-json": "cache,omitempty"
              }
            ]
          }
        },
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/deploy.CreateReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesDeployCreateReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesEventEventRsp": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel intact project name",
            "x-go-field-name": "Channel",
            "x-tag-json": "channel"
          },
          "error": {
            "type": "string",
            "description": "Error error message from w3b node (api level), different from Result.Error",
            "x-go-field-name": "Error",
            "x-tag-json": "error,omitempty"
          },
          "eventID": {
            "type": "string",
            "description": "EventID same as EventReq.EventID",
            "x-go-field-name": "EventID",
            "x-tag-json": "eventID"
          },
          "publisherID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "description": "PublisherID publisher(device) unique id in w3b node",
                "x-go-field-name": "PublisherID",
                "x-tag-json": "publisherID"
              }
            ]
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesEventResult"
            },
            "description": "Results result for each wasm invoke, which hits strategies.",
            "x-go-field-name": "Results",
            "x-tag-json": "results"
          }
        },
        "required": [
          "channel",
          "publisherID",
          "eventID",
          "results"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/event.EventRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesEventEventRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesEventResult": {
        "type": "object",
        "properties": {
          "appletName": {
            "type": "string",
            "description": "AppletName applet name(unique) under published channel(project)",
            "x-go-field-name": "AppletName",
            "x-tag-json": "appletName"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "ReturnCode wasm call returned code",
            "x-go-field-name": "ReturnCode",
            "x-tag-json": "code"
          },
          "error": {
            "type": "string",
            "description": "Error message instance module, presents result for wasm invoking",
            "x-go-field-name": "Error",
            "x-tag-json": "error,omitempty"
          },
          "handler": {
            "type": "string",
            "description": "Handler invoked wasm entry name",
            "x-go-field-name": "Handler",
            "x-tag-json": "handler"
          },
          "instanceID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "description": "InstanceID the unique wasm vm  id",
                "x-go-field-name": "InstanceID",
                "x-tag-json": "instanceID"
              }
            ]
          },
          "returnValue": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8"
            },
            "description": "ReturnValue wasm call returned value",
            "x-go-field-name": "ReturnValue",
            "x-tag-json": "returnValue"
          }
        },
        "required": [
          "appletName",
          "instanceID",
          "handler",
          "returnValue",
          "code"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/event.Result",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesEventResult"
      },
      "GithubComMachinefiW3BstreamPkgModulesOperatorCreateReq": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-go-field-name": "Name",
            "x-tag-json": "name"
          },
          "privateKey": {
            "type": "string",
            "x-go-field-name": "PrivateKey",
            "x-tag-json": "privateKey"
          }
        },
        "required": [
          "name",
          "privateKey"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/operator.CreateReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesOperatorCreateReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesOperatorDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsOperator"
          },
          {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "x-go-field-name": "Address",
                "x-tag-json": "address"
              }
            },
            "required": [
              "address"
            ],
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/operator.Detail",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesOperatorDetail"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesOperatorListDetailRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesOperatorDetail"
            },
            "x-go-field-name": "Data",
            "x-tag-json": "data"
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "x-go-field-name": "Total",
            "x-tag-json": "total"
          }
        },
        "required": [
          "data",
          "total"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/operator.ListDetailRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesOperatorListDetailRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesProjectCreateReq": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsProjectName"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsProjectBase"
          },
          {
            "type": "object",
            "properties": {
              "database": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmDatabase"
                  },
                  {
                    "x-go-field-name": "Database",
                    "x-go-star-level": 1,
                    "x-tag-json": "database,omitempty"
                  }
                ]
              },
              "envs": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmEnv"
                  },
                  {
                    "x-go-field-name": "Env",
                    "x-go-star-level": 1,
                    "x-tag-json": "envs,omitempty"
                  }
                ]
              }
            },
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/project.CreateReq",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesProjectCreateReq"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesProjectCreateRsp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsProject"
          },
          {
            "type": "object",
            "properties": {
              "channelState": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesBool"
                  },
                  {
                    "x-go-field-name": "ChannelState",
                    "x-tag-json": "channelState"
                  }
                ]
              },
              "database": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmDatabase"
                  },
                  {
                    "x-go-field-name": "Database",
                    "x-go-star-level": 1,
                    "x-tag-json": "database,omitempty"
                  }
                ]
              },
              "envs": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmEnv"
                  },
                  {
                    "x-go-field-name": "Env",
                    "x-go-star-level": 1,
                    "x-tag-json": "envs,omitempty"
                  }
                ]
              }
            },
            "required": [
              "channelState"
            ],
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/project.CreateRsp",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesProjectCreateRsp"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesProjectDetail": {
        "type": "object",
        "properties": {
          "applets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesAppletDetail"
            },
            "x-go-field-name": "Applets",
            "x-tag-json": "applets,omitempty"
          },
          "projectID": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesSFID"
              },
              {
                "x-go-field-name": "ProjectID",
                "x-tag-json": "projectID"
              }
            ]
          },
          "projectName": {
            "type": "string",
            "x-go-field-name": "ProjectName",
            "x-tag-json": "projectName"
          }
        },
        "required": [
          "projectID",
          "projectName"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/project.Detail",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesProjectDetail"
      },
      "GithubComMachinefiW3BstreamPkgModulesProjectListDetailRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesProjectDetail"
            },
            "x-go-field-name": "Data",
            "x-tag-json": "data"
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "x-go-field-name": "Total",
            "x-tag-json": "total"
          }
        },
        "required": [
          "data",
          "total"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/project.ListDetailRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesProjectListDetailRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesProjectListRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsProject"
            },
            "x-go-field-name": "Data",
            "x-tag-json": "data"
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "x-go-field-name": "Total",
            "x-tag-json": "total"
          }
        },
        "required": [
          "data",
          "total"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/project.ListRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesProjectListRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesPublisherCreateReq": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "x-go-field-name": "Key",
            "x-tag-json": "key"
          },
          "name": {
            "type": "string",
            "x-go-field-name": "Name",
            "x-tag-json": "name"
          }
        },
        "required": [
          "name",
          "key"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/publisher.CreateReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesPublisherCreateReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesPublisherListRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsPublisher"
            },
            "x-go-field-name": "Data",
            "x-tag-json": "data"
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "x-go-field-name": "Total",
            "x-tag-json": "total"
          }
        },
        "required": [
          "data",
          "total"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/publisher.ListRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesPublisherListRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesPublisherUpdateReq": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "x-go-field-name": "Key",
            "x-tag-json": "key"
          },
          "name": {
            "type": "string",
            "x-go-field-name": "Name",
            "x-tag-json": "name"
          }
        },
        "required": [
          "name",
          "key"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/publisher.UpdateReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesPublisherUpdateReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesResourceDownLoadResourceRsp": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "x-go-field-name": "FileName",
            "x-tag-json": "fileName"
          },
          "url": {
            "type": "string",
            "x-go-field-name": "Url",
            "x-tag-json": "url"
          }
        },
        "required": [
          "fileName",
          "url"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/resource.DownLoadResourceRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesResourceDownLoadResourceRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesResourceListRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModulesResourceResourceInfo"
            },
            "x-go-field-name": "Data",
            "x-tag-json": "data"
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "x-go-field-name": "Total",
            "x-tag-json": "total"
          }
        },
        "required": [
          "data",
          "total"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/resource.ListRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesResourceListRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesResourceResourceInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelResource"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsResourceInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsResourceOwnerInfo"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsKitSqlxDatatypesOperationTimes"
          },
          {
            "type": "object",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/resource.ResourceInfo",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesResourceResourceInfo"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesStrategyCreateReq": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsRelApplet"
          },
          {
            "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsStrategyInfo"
          },
          {
            "type": "object",
            "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/strategy.CreateReq",
            "x-id": "GithubComMachinefiW3BstreamPkgModulesStrategyCreateReq"
          }
        ]
      },
      "GithubComMachinefiW3BstreamPkgModulesStrategyListRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsStrategy"
            },
            "x-go-field-name": "Data",
            "x-tag-json": "data"
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "x-go-field-name": "Total",
            "x-tag-json": "total"
          }
        },
        "required": [
          "data",
          "total"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/strategy.ListRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesStrategyListRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesTrafficlimitCreateReq": {
        "type": "object",
        "properties": {
          "apiType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsTrafficLimitType"
              },
              {
                "x-go-field-name": "ApiType",
                "x-tag-json": "apiType"
              }
            ]
          },
          "duration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesDuration"
              },
              {
                "x-go-field-name": "Duration",
                "x-tag-json": "duration"
              }
            ]
          },
          "threshold": {
            "type": "integer",
            "format": "int32",
            "x-go-field-name": "Threshold",
            "x-tag-json": "threshold"
          }
        },
        "required": [
          "threshold",
          "duration",
          "apiType"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/trafficlimit.CreateReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesTrafficlimitCreateReq"
      },
      "GithubComMachinefiW3BstreamPkgModulesTrafficlimitListRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgModelsTrafficLimit"
            },
            "x-go-field-name": "Data",
            "x-tag-json": "data"
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "x-go-field-name": "Total",
            "x-tag-json": "total"
          }
        },
        "required": [
          "data",
          "total"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/trafficlimit.ListRsp",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesTrafficlimitListRsp"
      },
      "GithubComMachinefiW3BstreamPkgModulesTrafficlimitUpdateReq": {
        "type": "object",
        "properties": {
          "duration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgDependsBaseTypesDuration"
              },
              {
                "x-go-field-name": "Duration",
                "x-tag-json": "duration"
              }
            ]
          },
          "threshold": {
            "type": "integer",
            "format": "int32",
            "x-go-field-name": "Threshold",
            "x-tag-json": "threshold"
          }
        },
        "required": [
          "threshold",
          "duration"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/modules/trafficlimit.UpdateReq",
        "x-id": "GithubComMachinefiW3BstreamPkgModulesTrafficlimitUpdateReq"
      },
      "GithubComMachinefiW3BstreamPkgTypesWasmCache": {
        "type": "object",
        "properties": {
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsCacheMode"
              },
              {
                "x-go-field-name": "Mode",
                "x-tag-json": "mode"
              }
            ]
          },
          "prefix": {
            "type": "string",
            "x-go-field-name": "Prefix",
            "x-tag-json": "prefix,omitempty"
          }
        },
        "required": [
          "mode"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/types/wasm.Cache",
        "x-id": "GithubComMachinefiW3BstreamPkgTypesWasmCache"
      },
      "GithubComMachinefiW3BstreamPkgTypesWasmColumn": {
        "type": "object",
        "properties": {
          "constrains": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmConstrains"
              },
              {
                "description": "Constrains column constrains",
                "x-go-field-name": "Constrains",
                "x-tag-json": "constrains"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Name column name",
            "x-go-field-name": "Name",
            "x-tag-json": "name"
          }
        },
        "required": [
          "name",
          "constrains"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/types/wasm.Column",
        "x-id": "GithubComMachinefiW3BstreamPkgTypesWasmColumn"
      },
      "GithubComMachinefiW3BstreamPkgTypesWasmConstrains": {
        "type": "object",
        "properties": {
          "autoincrement": {
            "type": "boolean",
            "x-go-field-name": "AutoIncrement",
            "x-tag-json": "autoincrement,omitempty"
          },
          "datatype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsWasmDBDatatype"
              },
              {
                "x-go-field-name": "Datatype",
                "x-tag-json": "datatype"
              }
            ]
          },
          "decimal": {
            "type": "integer",
            "format": "uint64",
            "x-go-field-name": "Decimal",
            "x-tag-json": "decimal,omitempty"
          },
          "default": {
            "type": "string",
            "x-go-field-name": "Default",
            "x-go-star-level": 1,
            "x-tag-json": "default,omitempty"
          },
          "desc": {
            "type": "string",
            "x-go-field-name": "Desc",
            "x-tag-json": "desc,omitempty"
          },
          "length": {
            "type": "integer",
            "format": "uint64",
            "x-go-field-name": "Length",
            "x-tag-json": "length,omitempty"
          },
          "null": {
            "type": "boolean",
            "x-go-field-name": "Null",
            "x-tag-json": "null,omitempty"
          }
        },
        "required": [
          "datatype"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/types/wasm.Constrains",
        "x-id": "GithubComMachinefiW3BstreamPkgTypesWasmConstrains"
      },
      "GithubComMachinefiW3BstreamPkgTypesWasmDatabase": {
        "type": "object",
        "properties": {
          "dialect": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgEnumsWasmDBDialect"
              },
              {
                "description": "Dialect database dialect, support postgres only now",
                "x-go-field-name": "Dialect",
                "x-tag-json": "dialect,omitempty,default=''"
              }
            ]
          },
          "schemas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmSchema"
            },
            "description": "Schemas schema list",
            "x-go-field-name": "Schemas",
            "x-tag-json": "schemas,omitempty"
          }
        },
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/types/wasm.Database",
        "x-id": "GithubComMachinefiW3BstreamPkgTypesWasmDatabase"
      },
      "GithubComMachinefiW3BstreamPkgTypesWasmEnv": {
        "type": "object",
        "properties": {
          "env": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 2,
              "minItems": 2
            },
            "x-go-field-name": "Env",
            "x-tag-json": "env"
          }
        },
        "required": [
          "env"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/types/wasm.Env",
        "x-id": "GithubComMachinefiW3BstreamPkgTypesWasmEnv"
      },
      "GithubComMachinefiW3BstreamPkgTypesWasmKey": {
        "type": "object",
        "properties": {
          "columnNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-go-field-name": "ColumnNames",
            "x-tag-json": "columnNames"
          },
          "expr": {
            "type": "string",
            "x-go-field-name": "Expr",
            "x-tag-json": "expr,omitempty"
          },
          "isUnique": {
            "type": "boolean",
            "x-go-field-name": "IsUnique",
            "x-tag-json": "isUnique,omitempty"
          },
          "method": {
            "type": "string",
            "x-go-field-name": "Method",
            "x-tag-json": "method,omitempty"
          },
          "name": {
            "type": "string",
            "x-go-field-name": "Name",
            "x-tag-json": "name,omitempty"
          }
        },
        "required": [
          "columnNames"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/types/wasm.Key",
        "x-id": "GithubComMachinefiW3BstreamPkgTypesWasmKey"
      },
      "GithubComMachinefiW3BstreamPkgTypesWasmSchema": {
        "type": "object",
        "properties": {
          "schema": {
            "type": "string",
            "description": "Name: schema name, use postgres driver, default schema is `public`",
            "x-go-field-name": "Name",
            "x-tag-json": "schema,omitempty,default='public'"
          },
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmTable"
            },
            "description": "Tables: tables define",
            "x-go-field-name": "Tables",
            "x-tag-json": "tables,omitempty"
          }
        },
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/types/wasm.Schema",
        "x-id": "GithubComMachinefiW3BstreamPkgTypesWasmSchema"
      },
      "GithubComMachinefiW3BstreamPkgTypesWasmTable": {
        "type": "object",
        "properties": {
          "cols": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmColumn"
            },
            "description": "Cols table column define",
            "x-go-field-name": "Cols",
            "x-tag-json": "cols"
          },
          "desc": {
            "type": "string",
            "description": "Desc table description",
            "x-go-field-name": "Desc",
            "x-tag-json": "desc,omitempty"
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubComMachinefiW3BstreamPkgTypesWasmKey"
            },
            "description": "Keys table index or primary define",
            "x-go-field-name": "Keys",
            "x-tag-json": "keys"
          },
          "name": {
            "type": "string",
            "description": "Name table name",
            "x-go-field-name": "Name",
            "x-tag-json": "name"
          }
        },
        "required": [
          "name",
          "cols",
          "keys"
        ],
        "x-go-vendor-type": "github.com/machinefi/w3bstream/pkg/types/wasm.Table",
        "x-id": "GithubComMachinefiW3BstreamPkgTypesWasmTable"
      },
      "ProjectProvider": {
        "type": "object",
        "properties": {
          "projectName": {
            "type": "string",
            "format": "projectName",
            "x-go-field-name": "ProjectName",
            "x-tag-name": "projectName",
            "x-tag-validate": "@projectName"
          }
        },
        "required": [
          "projectName"
        ],
        "description": "ProjectProvider with account id prefix",
        "x-id": "ProjectProvider"
      }
    }
  }
}